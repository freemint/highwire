<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<HTML LANG="en">
<HEAD>
<META HTTP-EQUIV="Content-Language" CONTENT="en">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>HighWire Developers Letter</TITLE>
<META NAME="date" CONTENT="2003-10-21">
<META NAME="author" CONTENT="HighWire Development Team">
</HEAD>
<BODY>

<H1>HighWire 0.1.5 &mdash; public beta</H1>

<P>&nbsp;&nbsp;Once again the time has come for a new release of HighWire, and
this time the list of changes should hold something of interest for everybody!


<P>&nbsp;<HR WIDTH="90%">
<H2>Image support and cache functionality</H2>

<P>&nbsp;&nbsp;Clearly the most exciting change is that HighWire finally is
capable of viewing JPG/PNG graphics, and that the program now is able to
download and display images via remote connections! In order to achieve this you
must however specify a directory HighWire can use for its temporary files.  In
your <TT>highwire.cfg</TT> file you need to enter a line with this syntax:
<PRE
>	CACHEDIR = <I>&lt;full path to cache directory&gt;</I>
</PRE>
<p>In addition to this, HighWire is also able to store image bitmaps in RAM to
speed up the handling of graphics.  Eg. swapping between pages stored in the
cache can benefit enormously from this! You can determine the amount of RAM
that can be used to store images:
<PRE
>	CACHEMEM = <I>&lt;size in kilo bytes&gt;</I>
</PRE>
<p>If this setting is not present, HighWire will use 100kb.  It is important to
point out, that if you visit graphic intensive pages HighWire may have to spend
time flushing the cache memory over and over again if the cache memory limit is
set too low.

<P>&nbsp;&nbsp;<EM>Please note that not all subformats of JPG and PNG are
implemented yet.  Thus, some types of images may be displayed weired (eg.
interlaced, transparent, some monochome).</EM>

<P>&nbsp;&nbsp;Other interesting changes includes improved dithering and added
support for 32k screen modes as well as better support for TrueColour and
GrayScale.  There has also been an optimisation of the cache scheme that lead to
reduced flickering upon image rendering.  Finally, a correction in the
calculation of cache size for disk cached objects was made, and a bug
causing the program to enter an infinite loop (when writing to the cache failed
for some reason) was fixed.


<P>&nbsp;<HR WIDTH="90%">
<H2>Various issues</H2>

<P>&nbsp;&nbsp;Upon request from several people testing previous HighWire
releases, it is now enough to just enter eg. <TT>"www.atari.org"</TT> instead of
<TT>"http://www.atari.org"</TT>.
In other words, when no protocol prefix is specified in the URL edit field,
HighWire will assume <TT>"http://"</TT>.  While looking into the user interface
issues it is also worth pointing out that there is a new keyboard shortcut
added:
<BR>&nbsp;<BR>
<TT>&nbsp;&nbsp;&nbsp;CTRL+N <B>=&gt;</B> </TT>Opens a new (empty) browser window

<P>&nbsp;&nbsp;The previous version did not use correct clipping when drawing
infobar/edit field, something that could cause droppings on screen when the
 window was shaded or
iconified.  This is all fixed now, as is a bug that would lead to unexpected
results when a table cell had both rowspan and colspan specified.  Something
that is all new to 0.1.5 is the progress bar (only visible if you have an
infobar) which will give you an indication on how busy HighWire currently is
with loading and rendering.


<P>&nbsp;&nbsp;If a server is not responding, HighWire can now detect this and
instead of hanging you will get a message telling you that HTTP header request
timed out.  Another problem that could lead to infinite loops was when HighWire
hit very long lines in HTML texts, obviously a bug we're happy to see deleted.
If a connection fails HighWire will now correctly close the socket, thus
preventing messages about <TT>"too many open files"</TT>.  A problem with very
long URLs overflowing an internal buffer (potentially crashing HighWire) is
another thing that has been cleared up in the new release.

<P>&nbsp;&nbsp;HighWire should now also be better at detecting situations when
it is about to run out of available memory.  This may prevent HighWire from
crashing under such circumstances.  Another change has been made in the Unicode
support, to enable HighWire to cope better with invalid characters.

<P>&nbsp;&nbsp;Finally, a frames related problem with
<TT>&lt;base href=".."&gt;</TT> was found
and cured.

<P>For more details see the <a href="../Change.Log">Change.Log</a> file.

<P>– <I>Thank you,</I></P>
<P>– <I>HighWire Development Team</I></P>

<P>&nbsp;<HR WIDTH="90%">
<P><B>Some useful links.</B></P>
<P>Here are some useful links for the HighWire project.</P>
<P><A HREF="http://highwire.atari-users.net/">http://highwire.atari-users.net/</A>
– HighWire Project Homepage.</P>
<P><A HREF="http://www.atari-users.net/mailman/listinfo/highwire-users_atari-users.net">HighWire
Users mailing list</A> – A list for users to ask questions and report bugs.</P>
<P><A HREF="http://www.atari-users.net/mailman/listinfo/highwire-atari-users.net">HighWire
Developer Mailing list</A> – A list for people interested in actively working
on the project.</P>

</BODY></HTML>
