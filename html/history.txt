Ok here are the new supports and changes

August 18, 2003

  AltF4's patches

  Makefile:  line 18 + 35
  image.c:   line 1711..1712:
  img_jpg.c:
  img_png.c:
    - support for jpg and png enabled (gcc only yet).

  image.c:
    - line 59 + 511 (setup) + 1562..1612 (init_display):
      raster_color() renamed to raster_cmap(), sounds more logical.

August 17, 2003

  AltF4's patches

  defs.h:
    - line 166..171:  removed GLOBAL, conflicts with define in libjpeg.

  image.c:  line 1213..1340;
  img_gif.c:
    - moved all GIF functions into an own file.

  image.c:
    - line 48 + 52 + 646..969 + 500..501 (setup)
      + 1106..1135 (init_display):  added functions for GrayScale and
      TrueColor images, only a rough basic implementation yet.
    - line 62 + 358..367 (image_job) + 1147 + 1197 (read_img):  return
      type corrected.
    - line 56 + 1142 (init_display):  new arrays for TrueColor and
      GrayScale to palette conversion.

August 16, 2003

  AltF4's patches

  cache.h:  line 41:
  cache.c:  line 514:
    - new function cache_query()

  image.c:
    - line 330..341 (image_job):  replaced call of cache_lookup() by
      cache_query(), is a bit faster and will later be used for loading
      of cached image files.

August 15, 2003

  AltF4's patches

  HighWire.c:
    - line 93..96 (main):  added comments for Mxalloc() mode.

  cache.h:
    - line 15..28 + 42:  struct CACHEINF modified.
    - line 32..37 + 39:  cache result values renamed.

  cache.c:
    - line 375..383 (cache_info):  struct CACHEINF modified.
    - line 420 + 424 + 427 + 429 + 432 (cache_exclusive):  cache result
      values renamed.

  p_about.c:
    - line 85 + 88 + 105 (about_cache):  struct CACHEINF modified.

  Loader.c:
    - line 567 + 569 + 573 (header_job):  cache result values renamed.

  image.c:
    - line 26 (struct s_img_info) + 356 (image_job)
      + 1288 (decGif_start):  new attribute NumComps contains the
      number of bits per pixel in an image scan line.
    - line 895..897 (raster_24) + 914..916 (raster_24)
      + 932 (raster_32) + 949 (raster_32r) + 1055 (cnvpal_true):
      corrected byte positions of rgb values, was shifted 8 bit left.
    - line 36 + 50..51 + 521 + 544..545 + 553 + 556..559 + 578..583
      + 610..617 + 621 + 644..651 + 656 + 699..704 + 730 + 792..793
      + 801 + 805..808 + 835..841 + 843 + 853..858 + 860 + 870..875
      + 877 + 887..892 + 894 + 906..911 + 913 + 925..930 + 941..946
      + 948 + 1134:  renamed parameters and variables of the raster
      functions to have them as common as possible.
    - line 1088..1124 (init_display):  swapped function pointer
      assignments, looks a bit more logical this way.

August 13, 2003

  AltF4's patches

  image.c:
    - line 39..64 + 66..69 + 234 (img_scale) + 453 (setup)
      + 462..508 (img_scale) + 528 + 550..553 + 558 + 561
      + 566 (raster_mono) + 583 + 587 + 591 (raster_stnd) + 615 + 621
      + 626 (raster_D1) + 649 + 655 + 661 (raster_D2) + 704 + 708
      + 712 (raster_I4) + 735 + 797..800 + 806..807 + 812
      + 816 (raster_I8) + 840 + 846 + 848 (raster_P8) + 858 + 863
      + 865 (raster_16) + 875 + 880 + 882 (raster_16r) + 892 + 897
      + 899 (raster_24) + 911 + 916 + 918 (raster_24r) + 930 + 935
      + 937 (raster_32) + 946 + 951 + 953 (raster_32r)
      + 967 (cnvpal_mono) + 988 (cnvpal_1_2) + 1007 (cnvpal_4_8)
      + 1027 (cnvpal_high) + 1054 (cnvpal_true):
      merged struct RASTERINFO into IMGINFO.
    - line 2 + 18..29 + 77 + 364 + 368..371 (image_job)
      + 1133..1280 (read_gif):  splitted off image decoder function to
      achieve higher modularity for easier implementation of further
      image formats.

August 12, 2003

  AltF4's patches

  pc_rastr.s:  line 96..97 (pc_raster_I8):
  image.c:     line 766..767 (raster_I8) + 45..46 (struct RASTERINFO)
               + 544 + 587 + 621 + 675 + 775 + 779 + 812 + 829 + 846:
    - the pixel index array ist organized as four byte longs now rather
      than two byte words.

  image.c:
    - line 18..19 + 69 + 21..23 + 996:  moved definitions to better
      places.
    - line 43 + 440 + 444 + 450 + 457..458 + 463 + 468 (setup)
      + 999..1001 + 1129 + 1181 (read_gif):  new struct IMGINFO to be
      filled out by image decoder function.
    - line 57..60 + 442..443 (setup) + 1133 (read_gif):  changed
      function pointer.
    - line 57 + 953 + 967..985 (init_display):  exported palette
      conversions to own functions.
    - line 447 + 474..478 (setup) + 1006 + 1061..1139 (read_gif):
      palette conversion is now performed by setup() rather than image
      decoders.
    - line 867..873 (raster_24) + 891..897 (raster_24r)
      + 915..925 (raster_32) + 941..947 (raster_32r):  removed ifdefs
      for Lattice because the palette handling is now completely
      machine, compiler and library independend .

August 11, 2003

  AltF4's patches

  defs.h:
    - line 5..7:  bumped to version 0.1.5 alpha.

  global.h:
    - line 172:  new function image_dispinfo().

  image.c:
    - line 44..49 + 517 + 572 + 604 + 638 + 693 + 724 + 829 + 847 + 864
      + 881 + 905 + 929 + 955:  removed special define for Lattice, no
      longer necessary.
    - line 66..67 + 464 (setup):  removed no longer used function type
      definition.
    - line 71..75:  new function image_dispinfo() returns a string
      describing with the asumed screen mode / display info.
    - line 109..138 (new_image) + 973:  moved initialization of screen
      mode related stuff into an own function init_display().

  cache.h:
    - line 26..27:  new functions cache_exclusive() and cache_abort(),
      changed meaning of cache_assign().  this three are managing now
      synchronization of parallel loading jobs, kind of preemtive
      multitasking that is.

  cache.c:
    - line 103:  new function tree_item() to find some particular empty
      cache item in the tree.
    - line 368 (cache_info):  set NULL pointer for empty cache items.
    - line 405:  new functions cache_exclusive() and cache_abort().
    - line 422..447 (cache_assign):  make use of the particular empty
      cache item instead of creating a new one at this point.
    - line 449 (cache_assign):  avoid screwing up the cache if storing
      failed for some reason (eg. no cache dir defined in config).

  p_about.c:
    - line 84 + 103 (about_cache):  prepared for NULL pointer of empty
      cache items.
    - line 228 (about_highwire):  display the determined screen mode.

  Loader.c:
    - line 481 (receive_job) + 581 + 669 (header_job):  added calls of
      cache_abort() to remove empty cache items of objects if their
      load failed.
    - line 565 (header_job):  added a cache query to avoid simultanous
      loading of identical objects.
    - line 644 + 669 (header_job):  close socket also when loading
      failed, else we get a 'too many open files' error at some time.

August 10, 2003   [V. 0.1.4 release]

  AltF4's patches

  Loader.c:
    - line 582..583 + 591 + 596..601 (header_job):  avoid loading again
      of already cached pages.
    - line 794..881:  removed unused code.

  Makefile:
    - removed unused lib, makes linking noticeable faster.

August 08, 2003

  AltF4's patches

  hwWind.c:  line 908 + 973 (draw_toolbar):
  Form.c:    line 500 + 516 + 573..576 + 598..599 (input_draw):
    - adaptions for monochrome screen mode.

August 03, 2003

  AltF4's patches

  ovl_sys.c:
    - line 16:  removed wrong include for Lattice.

  cache.c:
    - line 7:  added missing include for Lattice.

  image.c:
    - line 961..965 (raster_32r):  added forgotten ifdef.

  global.h:
    - line 25:  added missing declaration of background_colour.

  HighWire.c:
    - line 110 (main):  added initialization of background_colour.

  Frame.c:
    - line 53 (new_frame):  make use of background_colour.

  config.c:
    - line 12 + 49 + 149 (read_config):  added DFLT_BACKGND keyword.

July 29, 2003

  AltF4's patches

  Location.h:  line 21 + 38 + 46:
  Location.c:  line 55 (_alloc) + 251 (_loc_Hash):
    - new function to calculate a hash value from a location's content.

  cache.c:
    - line 15 + 17 + 34 + 40..57 (create_item) + 64 (destroy_item)
      + 94..121 (cache_lookup):  implemented a search tree for faster
      access to queried cache objects.

  Makefile:
    - extended rules for targets clean and distclean.

July 26, 2003

  AltF4's patches

  image.c:
    - line 348..362 (image_job):  avoid useless queries.

  Paragrph.c:
    - line 828 (content_calc):  use correct width value to not overlap
      objects placed side by side (happend with percent width tables).

  cache.h:    line 4 + 6 + 14:
  cache.c:    line 19 + 38 (create_item) + 56 + 60 (cache_insert)
              + 70 (cache_lookup) + 78 + 81 + 95 (cache_lookup) + 204
              + 207 (cache_info):
  p_about.c:  line 79..82 (about_cache):
    - renamed parameters 'hash' to 'ident', matches better their
      meaning.

  cache.c:
    - line 15..26 + 45..46 (create_item) + 52 (destroy_item) + 72 + 76
      + 79 + 82 + 85 + 87..97 (cache_lookup) + 111 + 122 (cache_bound)
      + 134..138 + 146..150 + 155 (cache_release) + 167..170
      + 174..183 (cache_clear) + 199..202 + 213 (cache_info):  changed
      cache storage structure from single linked list to double linked.

July 23, 2003

  AltF4's patches

  Loader.h:
    - line 26:  new element SuccJob.
    - line 42:  additional parameter successor for start_objc_load().

  Loader.c:
    - line 52 + 679 + 280 (start_cont_load)
      + 317..323 (start_objc_load):  new function generic_job() to
      handle data types which aren't handled by parser functions.
    - line 162 (new_loader) + 306 + 314 + 338..339 (start_objc_load)
      + 461 + 512 (receive_job) + 531 (header_job):  new function
      pointer element SuccJob to be used instead of parser functions,
      if set.  will also be called for loader invalidation.
    - line 291 (start_cont_load):  changed to correct parser type.
    - line 583 (header_job):  start loading for all data types.

  render.c:
    - line 611 (render_BGSOUND_tag):  comment corrected.
    - line 626 (render_BGSOUND_tag):  adapted to extended parameter
      list.
    - line 1263:  new function render_EMBED_tag().

  hwWind.c:
    - line 1275 (wnd_hdlr):  avoid adding of history entries for eg.
      background sound.

July 22, 2003

  AltF4's patches

  hwWind.h:  line 25:
  hwWind.c:  line 79..80 + 85 + 90 + 799 (hwWind_history)
             + 1264 (wnd_hdlr) + 1421+ 1513 (hwWind_button):
    - toolbar button 'open file' added.

July 21, 2003

  AltF4's patches

  Loader.h:    line 40..41:
  Loader.c:    line 51 + 228..700:
  Form.c:      line 770 (input_activate):
  render.c:    line 445..450 (render_FRAMESET_tag)
               + 569..570 (render_META_tag) +625 (render_BGSOUND_tag):
  keyinput.c:  line 140 (key_pressed):
  Mouse_R.c:   line 205..224 (button_clicked):
  AEI.c:       line 141 (page_load) + 180 (vastart) + 384 (menu_open)
               + 401..408 (menu_reload):
  hwWind.c:    line 244 (new_hwWind) + 833..836 (hwWind_history)
               + 1769 (hwWind_keybrd):
    - big code reorganize, new_loader_job() is spiltted off now into
      start_page_load(), start_cont_load() and start_objc_load().

  hwWind.c:
    - line 1241 + 1314 + 1329 (wnd_hdlr):  corrected toolbar button
      state settings.

July 19, 2003

  AltF4's patches

  global.h:  line 61 + 113..114:
  AEI.c:     line 29 + 35 + 71..97:
  Loader.c:  line 797..849:
    - moved identify_AES() and can_extended_mxalloc() to a more logical
      location.

  Redraws.c:
    - line 12:  added a patched vsf_udpat() to avoid a bug in the gemlib
      <= 0.42.2.

  Containr.c:
    - line 1240..1242 (containr_redraw):  changed background fill
      pattern for empty containrs.

  hwWind.c:
    - line 203..204 + 242..249 (new_hwWind):  draw content immediately
      after been opened to avoid empty windows on long loading pages;
      replaces seperate draws of infobar and toolbar.
    - line 937 + 971 (draw_toolbar):  removed unused code.

July 18, 2003

  AltF4's patches

  AEI.c:
    - line 25 + 706..708 (rpopup_open) use the correct URL for
      'view source'.

  Containr.h:
    - line 29:  two more notification event types added.
    - line 137:  new function containr_escape().

  Containr.c:
    - line 339:  new function containr_escape() to stop all jobs
      related to a containr hirachy.
    - line 481..492 + 512..513 + 519 + 530 (history_update):  corrected
      consistency checks, was much too picky about empty frames.

  Loader.h:
    - line 37:  additional argument target for new_loader().

  Loader.c:
    - line 138 + 143 (new_loader) + 608..610 (new_loader_job):
      additional argument target.
    - line 183 (new_loader) + 196 (delete_loader):  always send generic
      notification on creating/destroing loaders.

  image.c:
    - line 204 (new_image) + 229 (delete_image) + 302 + 333
      + 348 (image_calculate) + 436..437 (image_job):  always send
      generic notification on starting/stopping image jobs.

  hwWind.c:
    - line 804..820 (hwWind_history):  handle toolbar update for empty
      pages/framesets.
    - line 1211..1311 (wnd_hdlr):  overworked to handle page loading
      stopped.
    - line 1490 (hwWind_button) + 1611 (hwWind_keybrd):  activated stop
      button in the toolbar to allow to stop loading of pages, same
      function is implemented for the escape key now.

  highwire.prj, purewire.prj:
    - dependencies updated.

July 13, 2003

  AltF4's patches

  Location.c:
    - line 256..259 (location_FullName) + 344..345 (location_equal):
      made functions more stable against invalid pointers.
    - line 273 + 284 + 297 + 308 (location_FullName): faster string
      copying.

  cache.c:
    - line 280 (cache_assign):  corrected file open mode.

  Loader.c:
    - line 72 (parser_job) + 184..186 (new_loader)
      + 450..455 + 460 + 464..466 (loader_job):  corrected setting of
      default MIME types.
    - line 404..406 (receive_job):  set cached file in loader.
    - line 457..459 (parser_job):  added cache lookup for header
      redirect.
    - line 461..462 (loader_job):  removed wrong notification at header
      redirect (fixes bug #0092).

  mime.h:  line 22..23:
  mime.c:  line 24 + 29..30 + 44 + 105..106 + 112 (mime_byString):
    - added/corrected some types.

July 10, 2003

  AltF4's patches

  Containr.h:
    - line 154:  new function history_update().
    - line 162:  new structure elements ScrollV, ScrollH.

  Containr.c:
    - line 33 + 348 (create_r) + 501 + 510 (process_r):  new structure
      elements ScrollV and ScrollH for HISTITEM and HISTENTR.
    - line 463:  new function history_update() to store scroll bar pos.

  Loader.h:  line 16:
  Loader.c:  line 144 (new_loader):
    - new structure elements ScrollV, ScrollH.

  parser.c:
    - line 61 (new_parser):  store scroll bare values from loader into
      frame.

  hwWind.c:
    - line 798..799 (hwWind_history) + 1208..1209 (wnd_hdlr):  store
      scroll bare values in history entry.
    - line 815 (hwWind_history):  set scroll bare values in loaders
      from history entry.

July 07, 2003

  AltF4's patches

  Loader.h:  line 14:
  Loader.c:  line 136 + 161 + 163 + 173 + 175 + 179 (new_loader)
             + 208 (delete_loader) + 612..613 + 625 (new_loader_job):
    - new structure element ExtAppl to store the name of an external
      application for handling of the file.

  defs.h:     line 478:
  Frame.c:    line 28 (new_frame) + 80 (delete_frame):
  render.c:   line 509 (render_BASE_tag) + 610 (render_BGSOUND_tag)
              + 1330 (render_IMG_tag):
  Mouse_R.c:  line 212 (button_clicked):
    - in struct frame, new element BaseHref to store attribute from
      <base href=...> tag (base URL for relative links in a document).

July 05, 2003

  AltF4's patches

  image.c:
    - line 24 + 26 + 31 + 33 + 38 + 40 + 365..366 (image_job) + 960
      + 971 (read_gif):   extended parameter list for alternative
      (local) file source.
    - line 283 + 308 (image_calculate):  avoid zero hash values for
      cache request.
    - line 336 + 345 (image_job):  avoid useless cache requests.

  Location.h:
    - line 18:  typo fixed.

  Location.c:
    - line 261 + 290..293 (location_FullName):  removed wrong slashes
      in 'about:' and 'mailto:' URLs.

  schedule.c:
    - line 66..80 (sched_remove) + 93..108 (sched_clear):  corrected
      invalid pointer handling that was messing up the job queue.

June 29, 2003

  AltF4's patches

  mime.h:
    - line 22:  new entry for 'audio/x-wav'.
    - line 37:  new function mime_byString().

  mime.c:
    - line 32:  changed entry for 'audio/x-wav'.
    - line 88:  new function mime_byString() to interprete strings with
      MIME types.

  http.h:
    - line 7:  new structure elements SrvrDate, Modified, Expires.

  http.c:
    - line 7 + 18:  new function http_date() to interprete date strings
      as defined in RFC 2616.
    - line 25..65 + 81..108 + 112 + 141 + 148 (http_charset):  MIME
      type strings are handled now by mime_byString().
    - line 224 + 240 + 343 (http_header):  new functions to interprete
      header fields Date, Last-Modified, Expires.
    - line 330 + 346 (http_header):  set line delimiter '\0' for more
      saveness.

  cache.h:
    - line 15:  new structure elements Date, Expires.
    - line 24:  extended argument list for cache_assign().

  cache.c:
    - line 21 + 193 (cache_info) + 245 + 269 (cache_assign):
      handling of file modification and expire times.
    - line 30..33 + 37..38 + 46 (cache_insert) + 263..264
      + 268 (cache_assign):  new function create_item().

  Loader.h:  line 21:
  Loader.c:  line 145 (new_loader) + 396 (receive_job)
             + 459 (loader_job):
    - new structure elements Date and Expires to be filled from http
      header.

  p_about.c:
    - line 3 + 102 + 113 (about_cache):  display file date and expire
      date of remote files (if available).

  Containr.c:
    - line 96 (delete_containr) 290 + 309 (containr_clear):  made sure
      that all jobs belonging to a containr to be invalidated get
      cleared in every case.

June 25, 2003

  AltF4's patches

  cache.h:
     - line 14:  added URL location to info struct.
     - line 19:  new functions to handle caching to disk files.

  cache.c:
    - line 1:  changed include.
    - line 20:  added location to hold the cache directory.
    - line 59 (cache_lookup):  ignore file items when a memory item is
      searched.
    - line 181 + 185 (cache_info):  set additional part of the info
      structure regarding to file cache.
     - line 198:  new functions to handle caching to disk files.

  config.c:
    - line 10 + 74 + 135:  new keyword 'CACHEDIR' to select a directory
      to store cached files.

  Loader.h:
    - line 16:  added slot for cached file hit to LOADER structure.

  Loader.c:
    - line 144 + 162 (new_loader) + 388 + 401..403 + 415 + 426
      + 484 (loader_job) + 556 + 626 (new_loader_job):  check for files
      from remote if they are already held in the disk cache.
    - line 194 (delete_loader):  release cached files, if used.
    - line 375 (receive_job):  assign received files to cache.

  p_about.c:
    - line 63..99 (about_cache):  reworked to consider disk cached
      items.

  purewire.prj, highwire.prj:
    - corrected dependencies.

Jun. 24, 2003

  AltF4's patches

  config.c:
    - line 12..114:  config parser reworked for faster startup.

  mime.h, mime.c:
    - new files for handling of Mime Types.

  Loader.h:
    - line 7..35:  moved Mime Type declaration over to mime.h.

  Loader.c:
    - line 104 (parser_job):  enabled skipping of multiple leading
      comment lines while detecting document type.
    - line 134..158:  moved Mime Type definition over to mime.c.
    - line 162 + 167 + 183..195 (new_loader):  replaced resolving of
      Mime Type by mime_byExtension().

  http.c:   line 11:
  Frame.c:  line 12:
    - replaced includes.

  Makefile, purewire.prj, highwire.prj:
    - changed due to new mime.h/.c.

Jun. 12, 2003

  AltF4's patches

  defs.h:
    - line 5..7:  bumped version to 0.1.4 alpha.

  scanner.c:
    - line 268:  added an often misused entity.

  render.c
    - line 147:  new function insert_anchor().
    - line 1070..1086 (render_A_tag):  replaced code by a call to
      insert_anchor().
    - line 1418 + 1444 (render_H_tag) + 1532 + 1550 (render_A_tag):
      implemented ID keyword as anchor.

  Widget.c:
    - line 22:  removed useless include.

May 26, 2003   [V. 0.1.3 release]

  AltF4's patches

  Table.h:  line 18 + 67:
  Table.c:  line 66 + 77 (table_start):
    - new attribute/argument to mark if a table was produced by a DIV
      tag.

  render.c:
    - line 1648 + 1651 + 1654 + 1657 + 1660 (render_DIV_tag) + 1939
      + 1941..1943 (render_TABLE_tag) + 1953 + 1956 + 1958 + 1964
      (render_TR_tag) + 1975 + 1978 + 1981 + 1987 (render_TD_tag)
      + 1998 + 2001 + 2005 +2010..2011 (render_TH_tag):  handle invalid
      placed DIV tags inside of tables correctly.

  hwWind.c:
    - line 161 + 171 (new_hwWind):  corrected infobar background colour
      to light gray for MagiC.

May 24, 2003

  AltF4's patches

  W_Struct.c:
    - line 183..186 (word_store):  16bit WCHAR strings got aligned to
      8bit for atari mapping to not confuse the VDI.

  highwire.rsc, highwire.hrd, highwire.rsd, highwire.rso, highwire.rsm,
  highwire.h:
    - new menu entry "Force Frame Controls" added.

  global.h:
    - line 22 + 32:  new global variables font_minsize and
      force_frame_controls.
    - line 59:  extended argument list of button_clicked().
    - line 70:  new function menu_frm_ctrl().

  Variable.c:
    - line 35 + 46:  new global variables font_minsize and
      force_frame_controls.

  AEI.c:
    - line 442 (menu_fontsize): adapt font_minsize to font size when
      decreasing.
    - line 470 + 586 (handle_menu):  new function menu_frm_ctrl().

  fontbase.c:
    - line 220..235 (font_step2size):  adapt text height to
      font_minsize.

  render.c:
    - line 335..337 + 350..352 + 396 (render_FRAMESET_tag):  handle
      NORESIZE and SCROLLING keywords depending on the global
      force_frame_controls.

  config.c:
    - line 60 + 105 (read_config): new config keywords FONT_MINSIZE and
      FORCE_FRAMECTRL.

  example.cfg/highwire.cfg:
    - line 68 + 74:  added examples for FONT_MINSIZE and
      FORCE_FRAMECTRL.

  HighWire.c:
    - line 192 (main):  extended argument list of button_clicked().

  Mouse_R.c:
    - line 20 (button_clicked):  new arguments clicks and state.
    - line 54 + 67 + 120 + 133:  handle double clicks on slider arrows
      in the same way as N.AES does.
    - line 209..211:  removed call of graf_mkstate(), the state of meta
      keys is taken from argument list now.

May 22, 2003

  AltF4's patches

  Table.h:
    - line 66..68:  extended argument lists of functions.

  Table.c:
    - line 65 + 67 + 86..90 + 106..115 (table_start) + 122 + 124 + 175
      + 18..183 + 186..198 (table_row) + 236 + 242 + 253 + 307
      + 311..328 + 330..335 + 337..344 + 351..352 + 354..356 + 467
      + 507 (table_cell):  all values that was read from parsed keys
      are taken from function arguments now.
    - line 359 (table_cell):  corrected handling of table cells with
      both colspan and rowspan set.

  render.c:
    - line 87:  new functions get_h_align() and get_v_align() to
      interprete alignment values from parsed keys.
    - line 1243 + 1262..1269 + 1274 (render_IMG_tag) + 1400..1401
      + 1410..1415 (render_H_tag) + 1466 + 1475..1479 (render_HR_tag)
      + 1526..1527 + 1537..1542 (render_P_tag):  replaced redundant
      code by calls of get_h_align() and get_v_align().
    - line 1644..1667 (render_DIV_tag):  re-implemented <div> tags as
      tables with one single cell, matches their meaning much more than
      the previous implementation.
    - line 1932 (render_TABLE_tag) + 1949 (render_TR_tag)
      + 1963 (render_TD_tag) + 1978 (render_TH_tag):  moved reading of
      parsed keys from table functions to the renderer functions.

  Form.c:
    - line 175 (set_word):  set the text of buttons and input fields
      always to black.
    - line 589 (input_draw):  removed useless font switching, already
      done by the calling function.

May 19, 2003

  AltF4's patches

  defs.h:
    - line 5..7:  bumped to version 0.1.3 alpha.

  render.c:
    - line 253..254 (render_TITLE_tag) + 1935 (render_TABLE_tag):
      corrections for proper font settings after tables and title tags.
    - line 468 (render_META_tag):  extended buffer for refresh urls.

  keyinput.c:
    - line 127 + 131 (key_pressed):  added handling of shift + left/
      right cursor keys.

  Paragrph.c:
    - line 130 + 142 (add_paragraph):  reset hanging indention also for
      reused paragraphs.

  list.c:
    - line 71..72 (list_finish): removed incorrect setting of hanging
      indention after list closed; not sure yet if that will produce
      failures somewhere else now, though.

May 13, 2003   [V. 0.1.2 release]

  AltF4's patches

  render.c:
    - line 252 (render_TITLE_tag):  force resetting to the actual font
      characteristics because after the containr_notify() it can be
      changed.

May 12, 2003

  AltF4's patches

	- splitted this file into two parts to have it more convenient for
	  editing.

May 9, 2003

  AltF4's patches

  Table.c:
    - line 545 + 547 (table_finish):  correction for width setting of
      empty cells.

May 6, 2003

  AltF4's patches

  Paragrph.c:  line 144..146 (add_paragraph):
    - corrected vertical offset setting between paragraphs.

  list.c:      line 19 + 63:
  render.c:    line 1406 + 1533 + 1551 + 1603 + 1625 + 1653 + 1680
               + 1706 + 1725 + 1731 + 2462:
    - adapted calls to add_paragraph() to have correct offset widths.

  Location.c:
    - line 633 (dir_entry):  yet another fix for relative links.

May 4, 2003

  AltF4's patches

  en_atari.h:  line 22..133:
  en_bics.h:   line 85..302:
  encoding.c:  line 9 + 232 + 298..306 (unicode_to_bics) + 403..417:
    - overworked encoding of unicode to speedo/system font for better
      performance.  new function _bin_search() performs a binary tree
      search and replaces uni_2_bics() and uni_2_atari().

  Paragrph.c:
    - line 173 (paragrph_finish):  special handling for trailing spaces
      of the last paragraph of a content.

  highwire.prj
    - line 4:  added stack size setting, as suggested by David.

April 30, 2003

  AltF4's patches

  Paragrph.c:
    - line 629: new function paragraph_filter() for correct filtering
      empty word items of.
    - line 651..669 + 673..679 + 681..683 + 686..691 + 696..709
      + 711..724 + 730..737 (content_minimum):  removed filter stuff
      that is located in paragraph_filter() now, improved calculation
      of minimum width of contents.

  Table.c:
    - line 546 (table_finish):  adjusted width of empty cells.
    - line 546 + 582 + 631..645 + 655 + 659:  reset percent value when
      a column has a fixed width set.
    - line 775 + 796 + 799 + 807..819 + 824..827 + 833 (table_calc):
      improved calculation of table cell widths with percent values.

  Form.c:
    - line 405 + 409 + 435 + 439 (selct_option):  corrected empty value
      assignments of selection lists.
    - line 714 + 723 (input_activate):  not selection an item from the
      popup mustn't change the value.

  render.c:
    - line 2060 + 2063..2072 (render_OPTION_tag):  corrected empty
      value assignments of selection lists.
    - line 2317..2371 (parse_plain):  overworked parsing of plain
      textes to avoid endless loops due to too long lines.

April 22, 2003

  AltF4's patches

  W_Struct.c:
    - line 148 (new_word):  initialize word->line pointer to NULL.

  image.c:
    - line 84..94 (set_word) + 323 (image_calculate):  corrected
      calculation for images with align=top set, simplified code a bit.

  Paragrph.c:
    - line 234 + 243..244 + 269..270 + 295 + 314 + 318..319
      + 326 (paragraph_calc):  corrected calculation for images with
      align=top set.

  Redraws.c:
    - line 33..120 (frame_draw) + 192..225 (draw_vbar):  removed unused
      code.
    - line 708..709 (draw_contents):  corrected calculation of
      background size.

  Location.c:
    - line 88 + 123 + 159 + 177..179 (new_location):  added support for
      invalid URLs of the form //<server_name>/ (missing http:).
    - line 621 (dir_entry):  yet another fix for relative URLs to avoid
      ommitting their base dir.

April 18, 2003

  AltF4's patches

  parser.h, parser.c:
    - line 268..273 + 295 + 303 (parse_tag):  modified to allow also
      calls without a parser argument.

  token.h:
    - line 62:  new tag OPTGROUP.
    - line 138:  new key LABEL.

  Form.h, Form.c:
    - line 389 + 402..409 + 427:  selct_option() gets a '0' terminated
      string now rather than an additional length.
    - line 425 (selct_option):  set the source encoding to atari.

  render.c:
    - line 122:  new function enc_to_sys() to encode an 8bit string to
      an atari coded string.
    - line 171..232 (render_TITLE_tag)
      + 2036..2054 (render_OPTION_tag):  replaced code by a call of
      enc_to_sys().
    - line 1028 + 1038 (render_A_tag):  added code for better handling
      of illegally nested anchors/links.
    - line 2058:  new function render_OPTGROUP_tag().

  hwWind.c:
    - line 1423..1432 (hwWind_button):  added history popups to the
      navigation left/right buttons, will be activated after 0.5 sec of
      pressing.

April 16, 2003

  AltF4's patches

  Form.h:
    - line 14..15:  extended argument list for input_handle() and
      input_activate().

  Form.c:
    - line 625 + 682..693 (input_handle):  additional argument to store
      the array point for the popup which have tobe handled by the
      caller function now.
    - line 627 + 629 + 632 + 694 + 702..705:  simplified the code a
      bit.
    - line 713 (input_activate):  additional argument slct that hold
      the value for processing a changed formular's selection list.

  Mouse_R.c:
    - line 178..181 + 185..193 (button_clicked):  opening of a popup
      for a formular selection list ist performed here now, since the
      Form.c functions shouldn't do any GUI stuff.

April 15, 2003

  AltF4's patches

  Form.h:
    - line 5:  new function form_finish().

  Form.c:
    - line 66 + 357 (form_selct) + 447..453 (selct_finish)
      + 657..682 (input_handle):  in struct s_select, new attribute
      Array to store strings for popup.
    - line 77 + 97 + 445:  new function finish_selct(), form_finish()
      to catch faulty HTML code.

  Frame.c:
    - line 92 (frame_finish):  call form_finish() to catch faulty coded
      formulars.

  render.c:
    - line 1973 + 1981..1983 (render_FORM_tag):  used form_finish()
      instead of selct_finish().

April 14, 2003

  AltF4's patches

  hwWind.c:
    - line 62 + 68 + 74 + 80:  spread overlapping buttons a bit.
    - line 199 (new_hwWind):  added missing string '0'.

  Table.c:
    - line 555 + 613 (table_finish) + 769 +782 + 787 (table_calc):
      fixed an array overflow in table cell calculation (when both a
      percent width as well as colspan are given).

  global.h:  line 35 + 58 + 107:
  Loader.c:  line 45 + 673..674 + 729..768:
  AEI.c:     line 30:
    - moved page_load() over to AEI.c since it belongs to GUI stuff,
      fsel_path[] is global now.

  Makefile, purewire.prj, highwire.prj:
    - re-sorted the source files in ascending order according to their
      data struture complexity, updated dependencies.

April 9, 2003

  AltF4's patches

  defs.h:    line 73:
  Widget.c:  line 107:
    - new function HW_form_popup() to create and handle a popup menu
      out of a char* array.

  render.c:
    - line 2037..2045 (render_OPTION_tag):  improved handling of VALUE
      keys, are seen as disabled now.

  Form.c
    - line 69:  new attribute Value for list items.
    - line 389..396 (selct_option):  added a check if a list item is a
      seperator.
    - line 408..413:  added handling of disabled list items.
    - line 635:  implemented popup menus for formular selection lists.
    - line 684..686 (input_activate):  replace all blanks by '+'s.

April 7, 2003

  AltF4's patches

  Form.h:
    - line 22:  new functions form_selct(), selct_option() and
      selct_finish().

  Form.c:
    - line 28 + 71 (new_form) + 109..115 (_alloc):  new attribute Last
      for easier handling of the element list of struct s_input.
    - line 22 + 37 + 55:  new element type for selection lists.
    - line 42..43 + 85 (_alloc) + 175..177 (form_radio) + 448
      + 451 (input_handle):  in struct s_input, Group and Selection are
      inside an union now.
    - line 263..268 (new_input):  when no SIZE is given the text input
      width will be set to a default value rather than to MAXLENGTH.
    - line 321:  new functions form_selct(), selct_option() and
      selct_finish() to create selection lists.
    - line 390 (input_draw):  drawings for the selection lists button.

  token.h:
    - line 152: new keyword SELECTED.

  render.c:
    - line 2007:  new  functions render_SELECT_tag() and
      render_OPTION_tag() for formular selection lists.

April 5, 2003

  AltF4's patches

  Containr.c:
    - line 556 (containr_byName):  changed interpretation of the
      _parent target.

April 4, 2003

  AltF4's patches

  hw-types.h:  line 108:
  inet.c:      line 280 + 301 (inet_recv):
  http.c:      line 354 (http_header):
    - added error code ECONNRESET.

  http.c:
    - line 295 + 298 (http_header):  corrected placing of the break.

  Location.c:
    - line 82..83 + 160..166 (new_location):  added parsing of port
      numbers in urls.
    - line 196..197:  corrected debug output.
    - line 242 + 265 (location_FullName):  made save against null
      pointers.
    - line 410 + 428..429 (dir_entry):  fixed wrong handling of
      relative src pathes.

  Loader.c:
    - line 433 + 440 (loader_job):  if a http request results in an
      immediate connection reset retry a second time.

  hwWind.c:
    - line 111..113 (hwWind_setup):  corrected settings of flags.
    - line 944..1006 (draw_toolbar):  made the edit field cursor two
      pixels wide, better to see.
    - line 1410 + 1450 + 1453 + 1458 (hwWind_button):  corrected
      coordinates for redrawing.
    - line 1541..1753 (hwWind_keybrd):  simplified the code and added
      some more functionality for the cursor keys.

March 30, 2003

  AltF4's patches

  hwWind.c:
    - line 42 + 844..980 (draw_toolbar) + 232 (new_hwWind)
      + 1038 (chng_toolbar) + 1088 (hwWind_redraw)
      + 1388 (hwWind_button) + 1593 (hwWind_keybrd):  additional
      argument for draw_toolbar() to reduce flickering while editing.
    - line 216 + 221 (new_hwWind): moved setting of sizes below the
      toolbar init.
    - line 529 (set_size):  adapt edit field cursor to change width.
    - line 558..559 (hwWind_resize):  corrected stored extent after
      resize.
    - line 1377..1379 (hwWind_button):  corrected calculation of cursor
      position after mouse click.
    - line 1484:  new function open_scrap() for clipboard read/write.
    - line 1497 + 1515..1521 + 1538 (hwWind_keybrd):
      simplified adjustment after cursor changed.
    - line 1499..1502:  new keys for clipboard handling.
    - line 1506 + 1560..1589:  several new keys added.

March 27, 2003

  AltF4's patches

  Location.h:  line 38:
  Location.c:  line 227:
  parser.c:    line 66..67 (new_parser):
  Loader.c:    line 423..424 (loader_job) + 627..628
               + 644..645 (new_loader_job):
    - new funtion location_FullName() to get the full quallified URL
      from a location.

  hwWind.h:
    - line 21:  new attribute TbarElem.
    - line 58:  new function hwWind_keybrd().

  hwWind.c:
    - line 50 + 769..811:  moved struct hw_buttons to top of the file.
    - line 157..158 (new_hwWind) + 447..461 (set_size)
      + 606 (hwWind_close) + 1230..1234 + 1251 + 1336 (hwWind_button):
      handle edit field.
    - line 835 + 838 + 86 + 892 (draw_toolbar):  draw edit field.
    - line 907..910 (chng_toolbar):  corrected set/reset of active
      element.
    - 932..933:  improved calculation of element clipping.
    - line 946 + 1065 (wnd_hdlr):  new function updt_toolbar() to
      update the edit field text.
    - line 1341: new function hwWind_keybrd().

  keyinput.c:
    - line 64 (key_pressed):  key events are now propagated to
      hwWind_keybrd() first.

March 26, 2003

  AltF4's patches

  hwWind.h:
    - line 18:  new attributes TbarMask and TbarActv.
    - line 40:  new function hwWind_close().
    - line 66:  new setup type HWWS_TOOLBAR.

  hwWind.c:
    - line 28 + 57 (hwWind_setup):  new setup type HWWS_TOOLBAR.
    - line 139 + 142 + 144 + 154 (new_hwWind) + 462 (hwWind_move)
      + 950 (hwWind_mouse) + 972..973 + 983 (hwWind_button):  handle
      TbarH.
    - line 582:  new function hwWind_close().
    - line 725:  new functions draw_toolbar() and chng_toolbar().
    - line 731 + 747 (hwWind_redraw):  make use of draw_toolbar().
    - line 841 + 858 + 900 (wnd_hdlr):  make use of chng_toolbar().
    - line 987 + 1000 + 1003 (hwWind_button):  invert sizer button when
      pressed.

  AEI.c:
    - line 804 (process_messages):  call hwWind_close() instead of
      direct deleting the window.

March 23, 2003

  AltF4's patches

  defs.h:      line 66..70 + 350 + 496..502:
  O_Struct.c:  line 40 (new_step) + 49 (add_step):
  W_Struct.c:  line 120 (new_word):
  Frame.c:     line 35..42 + 54 (new_frame):
  Table.c:     line 94 (table_start) + 249 (table_cell):
  p_about.c:   line 290 (parse_about):
  p_dir.c:     line 58 (parse_dir):
  Containr.h:  line 75..79:
  Containr.c:  line 73..76 + 80..83 (new_containr) + 158 + 163 + 167
               + 172 + 180 (containr_fillup) + 256..266 (containr_setup)
               + 304..305 (containr_clear) + 355..356 (create_r)
               + 503 (process_r) + 615 + 617 + 623
               + 625 (containr_byCoord) + 693 + 696 + 700 + 705 + 709
               + 767..769 (containr_Element) + 947 + 949 + 951 + 966
               + 975 (containr_calculate) + 1106 + 1118 + 1121 + 1123
               + 1127 + 1133 + 1135 (containr_redraw):
  Mouse_R.c:   line 223..224 + 226 (button_clicked):
  render.c:    line 315 + 392 + 398..402 (render_FRAMESET_tag) + 573
               + 582 (render_BODY_tag) + 722..723 (render_BASEFONT_tag)
               + 826 + 834..835 (render_FONT_tag) + 1026
               + 1052 (render_FONT_tag) + 1411..1413
               + 1428 (render_H_tag) + 1542 (render_P_tag)
               + 2322 (parse_image):
    - code cleaned up, removed unused attributes/defines and renamed
      others to have common naming scheme.

  Containr.h:  line 263:
  Containr.c:  line 75 (new_containr) + 304..305 (containr_clear)
    - new defines for frame border default values.
  token.h:
    - line 133:  new keyword FRAMESPACING.
  render.c:
    - line 283..307 (render_FRAMESET_tag):  overworked to handle
      FRAMESPACING attribute.
    - line 394 + 404:  replaced HW_PageStarted/HW_PageFinished notify
      by faster HW_PageUpdated.

March 22, 2003

  AltF4's patches

  Containr.h:  line 38:
  hwWind.c:    line 822 (wnd_hdlr):
    - new notify type HW_PageUpdated.

  Containr.c:
    - line 31 + 354 (create_r) + 501 (process_r):  save/restore border
      size and colour to/from history
    - line 552 (containr_process):  notify about frame borderss to
      redraw.

  Mouse_R.c:
    - line 216 (button_clicked):  new case PE_BORDER for frame resize.

March 21, 2003

  AltF4's patches

  Containr.c:
    - line 71 + 73 + 84 (new_containr):  modified initial settings.
    - line 248 + 258 (containr_setup) + 898 + 908
      + 914 (containr_calculate):  adjust frame extent depending on
      container border.
    - line 600 + 605 (containr_byCoord):  detect coorinates of borders.
    - line 666 + 717..721 + 727 + 732 (containr_Element):  corrected
      detection of borders.
    - line 1040 + 1062 (containr_redraw):  added drawing of border
      (moved over from Frame.c).

  render.c:
    - line 349 + 353 (render_FRAMESET_tag):  removed useless settings.
    - line 394:  redraw notification for border of a parent container.

  Frame.c:    line 123..138 (frame_calculate):
  Redraws.c:  line 35..118 (frame_draw):
    - outcommented code that is located now in Containr.c

March 19, 2003

  AltF4's patches

  render.c:
    - line 90:  new function url_correct() to get rid of html entities
      in an url.
    - line 333 (render_FRAMESET_tag) + 961 + 969..982 (render_A_tag)
      + 1245 (render_IMG_tag):  make use of url_correct() to get proper
      formatted urls.

  image.c:
    - line 203 (new_image):  avoid useles tries to decode directly
      remote images.

March 14, 2003

  AltF4's patches

  render.c:
    - line 251..264 (render_FRAMESET_tag):  corrected value settings of
      borders.

  Frame.c:
    - line 129 + 133 + 138 (frame_calculate):  removed false decrement
      of scrollbar_size.
    - line 208 + 244:  removed slider arrow adaption to frame border.

  Redraws.c:
    - line 41 + 45 + 62 + 66 + 83 + 86 + 93 + 103 + 107 (frame_draw):
      corrected calculation of border extents.
    - line 139:  corrected fill area calculation.
    - line 183 + 218..235 (draw_vbar) + 339..353 (draw_hbar):
      corrected calculation of slider border line coordinates.

March 12, 2003

  AltF4's patches

  Redraws.c:
    - line 224 + 231 (draw_vbar) + 345 + 352 (draw_hbar):  check for
      presence of the _other_ slider rather for itself (was a typo).
    - line 270 (draw_vbar):  corrected down arrow position.

March 7, 2003

  Baldrick's patches

  containr.c:
    - line 74 init Border Colour
    - line 81 get Border Colour from parent
    - line 255 set frame border colour from container
    - line 294 set Border Colour from parent or LWHITE
    - lines 668-710 reworked Border detection and watch areas

  containr.h:
    - line 77 added bad html key Border_Colour to s_containr
      struct

  defs.h:
    - line 500 added bad html key border_color to frame struct

  frame.c:
    - init frame->border_colour to G_LWHITE

  redraws.c:
    - lines 47,68,89,109 set fill colour to border_colour

  render.c:
    - lines 266-272 get BORDERCOLOR value if not ignore_colours

  token.h:
    - line 121 added key item BORDERCOLOR

March 6, 2003

  Baldrick's patches

  - a few more cleanups on this file to cut long lines down

  containr.c:
    - lines 72-73,78-79 added inits for Borders and Border_Size
       in new_containr()
    - line 112 added CONTAINR *last
    - line 113 added abs_val tracks if we have had a hard frame
      size value
    - lines 151-155 test if we have an abs_val, if we do add the
       Border_Size to the hard frame size value
    - line 158 add BRD_RIGHT to the containr borders
    - lines 160-164 test if we have an abs_val, if we do add the
       Border_Size to the hard frame size value
    - line 167 add BRD_BOTTOM to the containr borders
    - line 169 set last to ptr
    - lines 175-180 remove BRD_RIGHT and BRD_BOTTOM from last
       frame
    - lines 251-252 set frame borders and border_size from the
       containr values

  containr.h:
    - lines 75-76 added Borders and Border_Size to s_containr
      struct

  defs.h:
    - lines 66-70 added defines for Frame Borders
    - lines 498-499 added borders and border_size to frame struct

  frame.c:
    - lines 36-37 init values for borders and border_size
    - lines 124-139 added switch for real frame borders adjusting
       frame clip values

  redraws.c:
    - lines 37-120 large switch statement to draw the actual
       borders of our frameset if they exist
    - lines 181-183,193,301-303,313 all rem'd out, may not be
       needed anymore

  render.c:
    - lines 256-264 Now parse BORDER attribute of Frameset's

  AltF4's patches

  example.cfg/highwire.cfg:
    - line 60:  added comment due to extended INFOBAR values.

  hwWind.c:
    - line 40 + 208:  new draw_infobar() to draw an application widget
      infobar.
    - line 53 (hwWind_setup):  new setup for INFOBAR=4.
    - line 91 + 96 (new_hwWind):  improved detection of not valid
      widget colours.
    - line 124..159:  overworked due to new INFOBAR mode.
    - line 217 (hwWind_setHSInfo) + 294 (hwWind_setInfo)
      + 358 (hwWind_full) + 382 (hwWind_iconify) + 408 (hwWind_raise):
      moved check for window widgets over to calling functions.
    - line 309 (hwWind_raise):  added adjustment for infobar height.
    - line 509 + 605 (hwWind_redraw):  added redraw of the infobar.
    - line 761:  new hwWind_mouse() and hwWind_button() to handle
      infobar related area.

  hwWind.h:
    - line 17:  struct hw_window, new attributes TbarH and IbarH for
      toolbar and infobar height inside of a window.
    - line 51:  new hwWind_mouse() and hwWind_button().
    - line 62:  added comment.

  image.c:
    - line 112 + 127 + 835:  new raster_16r() to decode 16 bit
      HighColor in wrong byte order of native PC graphic cards.

  Mouse_R.c:
    - line 28..32 (button_clicked):  removed stuff that is handled now
      by hwWind_button().
    - line 290..322 (check_mouse_position):  removed stuff that is
      handled now by hwWind_mouse().

March 5, 2003

  Baldrick's patches

  - a few cleanups on this file to cut long lines down

March 1, 2003

  AltF4's patches

  defs.h:     line 22..32:
  keyinput.c: line 70 + 73 (key_pressed):
  Mouse_R.c:  line 33 + 39 + 217 (button_clicked):
  AEI.c:      line 533 (handle_menu) + 556 (update_menu)
            + 599 + 660 (rpopup_open):
	  - changed all comparsion of #if (...==TRUE/FALSE) to 1/0 because
	  this didn't work for gcc

  config.c:
    - line 104 (read_config):  new keyword INFOBAR to allow user
      configurable infobar appearance.

  hwWind.c:
    - line 28 + 45..53 + 99 (new_hwWind):  the window widgets are
      managed in wind_kind now.
    - line 38:  new function hwWind_setup() to control global window
      stuff, only infobar implemented yet.
    - line 116 + 118 (new_hwWind) + 205 (hwWind_setHSInfo)
      + 281 (hwWind_setInfo) + 724 (wnd_hdlr):  replaced compile-time
      settings of the infobar appearance to have it controllable now by
      the new hwWind_setup().
    - line 130 (new_hwWind) + 251 + 286 (hwWind_setInfo)
      + 688 + 701 + 732 (wnd_hdlr):  removed useless #ifdef.

  hwWind.h:
    - line 56:  new hwWind_setup() and accompanying enum HWWIND_SET.

  Mouse_R.c:
    - line 343 + 351 + 365 + 367 (check_mouse_position):  removed
      useless #ifdef.

February 28, 2003

  AltF4's patches

  hwWind.c:
    - line 24 88 + + 92 + 134 (new_hwWind) + 234 (hwWind_setHSInfo):
      removed hsl_top and hsl_bot, value of info_bgnd will be used
      instead.
    - line 25 + 66..74 (new_hwWind):  new variables widget_b, widget_w,
      widget_h to store extents of window elements and border.
    - line 222..229 (hwWind_setHSInfo):  improved calculation.

  inet.c:
    - line 205..224 (inet_connect):  increased timeout value to three
      seconds.

February 26, 2003

  AltF4's patches

  AEI.c:
    - line 87 + 93 (vastart):  corrected opening for qoted file names.
    - line 231 (doGSCommand):  adapted to changed new_hwWind().
    - line 295 (menu_open) + 313 + 318 (menu_reload) + 379 (menu_info):
      adapted to changed new_loader_job() parameter list.

  Form.c:
    - line 550 (input_activate):  adapted to changed new_loader_job()
      parameter list.

  HighWire.c:
    - line 165 + 170 (main):  adapted to changed new_hwWind().

  hwWind.c:
    - line 43 + 122 + 139 + 142 (new_hwWind):  changed parameter list
      because info was never used anywhere.
    - line 143 (new_hwWind) + 540 (hwWind_history):  adapted to changed
      new_loader_job() parameter list.

  hwWind.h:
    - line 30:  changed parameter list of new_hwWind().

  keyinput.c:
    - line 136 (key_pressed):  adapted to changed new_loader_job()
      parameter list.

  Loader.c:
    - line 162..165 (new_loader):  set default values.
    - line 570 + 578..580 (new_loader_job):  reduced parameter list.
    - line 654:  new function loader_setParams() to set encoding and
      margins.
    - line 745 (page_load):  adapted to changed new_loader_job()
      parameter list.

  Loader.h:
    - line 63:  reduced parameter list of new_loader_job().
    - line 64:  new loader_setParams().

  Mouse_R.c:
    - line 201 + 204 + 210 (button_clicked):  adapted to changed
      new_loader_job() and new_hwWind().

  render.c:
    - line 304..308 (render_FRAMESET_tag) + 413 (render_META_tag)
      + 470 (render_BGSOUND_tag):  adapted to changed new_loader_job()
      parameter list.

February 26, 2003

  Baldrick's patches

  defs.h: (experimental change)
    - line 22 Added _HIGHWIRE_REALINFO_ controls whether the window
      has a REAL GEM info gadget
    - line 29 same as above set to FALSE to suppress the REAL GEM
      info gadget

  HWwind.c:
    - line 29-30 added temp_area1 and temp_area2 GRECTs
	- lines 48-52 added experimental use for suppresing REAL GEM
	  info gadget
    - lines 67-70 new method for inc_xy calculation
    - line 125-127 changed INFOLINE to REALINFO and
      else the HSLSIZE to smallest possible
    - lines 222-220 reworked PXY settings
    - lines 293 and 295 Wrapper to suppress use of REAL GEM info
      gadget

February 24, 2003

  AltF4's patches

  HighWire.c:
    - line 93 (main): corrected comparsion of error code to negative
      values

  http.c:
    - line 252 (http_header):  evaluate timeout return values.

  hw-types.h:
    - line 101 + 104:  corrected error code defines to positive values.
    - line 106:  added more error code defines EINTR and ETIMEDOUT.

  inet.c:
    - line 176:  new signal handler for timeouts.
    - line 190..192 + 198..200 (inet_connect):  set timer to detect not
      responding servers.

  Loader.c:
    - line 677 (load_file) corrected comparsion of error code to
      negative values

  Mouse_R.c:
    - line 387 (check_mouse_position):  toggled order of comparsions,
      because 'cont' is NULL if 'elem' is PE_NONE.

  ovl_sys.c:
    - line 185 (load_ovl): corrected comparsion of error code to
      negative values

  p_dir.c:
    - line 92 (parse_dir): corrected comparsion of error code to
      negative values

  modules/example.src/sample.c:
    - line 101 (main): corrected comparsion of error code to
      negative values

  modules/network.src/network.c:
    - line 90 (main): corrected comparsion of error code to negative
      values.

  modules/example.src/sample.prj:
    - line 5: decreased stack size to 1k.

  modules/network.src/purec.prj:
    - line 3: decreased stack size to 1k.

February 23, 2003

  AltF4's patches

  hwWind.c:
    - line 22:  new variables to store colours for the hslider area.
    - line 70 (new_hwWind):  get the hslider area colours from the AES.
    - line 98..100 + 106:  corrected setting of the info text.
    - line 105:  set the hslider background colour, probably only
      necessary for N.AES.
    - line 178 (hwWind_setHSInfo):  additional check for window is
      iconified.
    - line 187..190 + 206:  modified area calculations to use the real
      widget extents as storec in inc_xy.
    - line 195 + 199:  set colours from stored values.
    - line 196..207: added vst_font(), vst_point()/vst_height(),
      vst_alignment(), v_hide_c(), v_show_c();  rearranged order to
      reduce mouse flickering.
    - line 221..238 (hwWind_setInfo):  added checks to reduce multiple
      clearing of empty info bar.
    - line 301 (hwWind_full) + 324 (hwWind_iconify)
      + 349 (hwWind_raise):  added calls of hwWind_setHSInfo().

  Mouse_R.c:
    - line 387 (check_mouse_position):  if() condition simplified.

  Paragrph.c:
    - line 176 (paragrph_finish):  when the last paragraph was removed
      due to being empty the eop_space of the previous one is set to
      zero now (related to bug #0090).

  render.c:
    - line 932 + 951 (render_A_tag):  added a filter to remove controll
      characters from the url.

  scanner.c:
    - line 184 (scan_css):  removed duplicate variable asignment.
    - line line 187 + 197:  fixed calculation of remaining argument
      length;  this could case a crash before.

February 21, 2003

  Baldrick's patches

  containr.c:
    - line 224 set frame->resisize based on container->Resize

  containr.h:
    - line 74 added BOOL Resize to struct s_containr

  defs.h:
    - line 490 added BOOL resize to struct frame_item

  frame.c:
    - line 36 init frame->resize to TRUE (default from w3)

  mouse_r.c:
    - lines 387-390 added test to change mouse pointer if pointer
      is over frame border and the frame is resizeable

  render.c:
    - lines 289 - 293 set container->Resize based on Key noresize

  token.h:
    - line 146 added NORESIZE token

February 20, 2003

  AltF4's patches

  aei.c:
    - line 805 modified to detect shift keys. If shifted then
      'Forward' through the page history instead of 'back'

  hwwind.c:
    - lines 180-185 added test to detect if we are top window
      by AES

February 20, 2003

  Baldrick's patches

  aei.c:
    - lines 801-808
       added handling of Left Arrow to 'Back' function
       possibly add other functions here later for shift click?

  highwire.c:
    - line 175 changed 1 to 0 since we don't need the test atm
      but will possibly need again later

  hwwind.c:
    - line 6 added include for gemx.h for ftext() call
    - lines 44 & 46 changed HSLIDE to LFARROW
    - removed line 101 set HSLSIZE
    - lines 170-200 new routines hwWind_setHSInfo()
       displays text in unused H scroller area
      **** Needs some more work *****
    - line 232 added call to hwWind_setHSInfo() for testing

February 19, 2003

  Baldrick's patches

  HWWIND.C
    - lines 42 & 44 added HSLIDE to kind
    - line 101 set HSLSIZE to 1000 (or full)

February 18, 2003

  AltF4's patches

  image.c:
    - line 110 + 127 (new_image) + 856 + 882:  new rasterizer functions
      raster_24r() and raster_32r() to support screen graphic formats
      with reversed byte order (intel's illness).

  modules\example.src\makefile:  line 67:
  modules\network.src\makefile:  line 67:
    - decreased stack size setting to 8kB, this saves more than 100kB
      at runtime.

February 16, 2003

  AltF4's patches

  inet.h:
    - line 5:  struct INET_FTAB is declared here now.
    - line 15:  added defines for funtion table calls.

  inet.c:
    - line 3:  undef USE_OVL to get the right declarations from inet.h.
    - line 22..36:  moved struct INET_FTAB declaration to inet.h,
      inet_ftab is now a structure rather than a pointer.
    - line 41..43 (ovl_invalid):  copy back default functions when the
      OVL got removed.
    - line 54 (ovl_load):  additional check for the correct ftab type.
    - line 63:  new default functions for loading the OVL on demand.
    - line 143 + 183 + 212 + 276 + 306 + 324:  removed all of the
      #elif defined(USE_OVL)  because OVL calls are done now directly
      through the function table.

  ovl_sys.c:
    - line 16 + 21:  corrected include path.

  modules\network.src\network.c:
    - line 22..30:  moved struct INET_FTAB declaration to inet.h.

February 14, 2003

  AltF4's patches

  inet.c:
    - line 55 (ovl_load):  overworked handling of failed OVL
      initialization

  ovl_sys.h:                     line 35 + 57
  modules/example.src/sample.c:  line 30 + 79 + 83:
  modules/example.src/network.c: line 35 + 75 + 86:
    - moved declaration of base OVL functions to ovl_sys.h, changed the
      return type of ovl_getftab() to void*.

  p_about.c:
    - line 120 + 190 (about_highwire):  added ifdefs.

  render.c:
    - line 250..271 (render_FRAMESET_tag):  overworked handling of
      <frameset> tags that has both COLS and ROWS set.

February 8, 2003

  AltF4's patches

  ovl_sys.h:
    - line 23 + 54 + 55:  in struct ovl_methods_t, reverted attribute
      magic back to a simple long instead of union, due to OVL_MAGIC
      being a number now.

  ovl_sys.c:
    - line 141 + 144 (load_ovl):  compare *ptr directly with OVL_MAGIC.
    - line 151 + 153:  magic is a long now.
    - line 200:  also Mfree() the OVL's env if detection failed.

  http.c:
    - line 164 (content_length):  corrected starting point of number to
      be interpreted.
    - line 260 + 264 + 269 (http_header):  get the stack type from
      inet_info() instead of a constant string.

February 7, 2003

  AltF4's patches

  global.h:
    - line 169:  destroy_word_structure() renamed to destroy_word_list
      and added a second attribute.

  list.c:
    - 59 (list_finish):  destroy_word_structure() renamed to
      destroy_word_list().

  Paragrph.c:
    - line 28 (destroy_paragraph_structure) + 598 (content_destroy):
      destroy_word_structure() renamed to destroy_word_list().
    - line 610:  punch() removed.
    - line 632..636 + 662..664 + 690..692 + 711..713 + 721..723
      + 743..745 + 755..776 (content_minimum):  removed old no more
      working debug stuff.
    - line 631 + 661 + 688 + 710 + 720 + 747:  removed variable trash,
     replaced calls of punch() by destroy_word_list().

  W_Struct.c:
    - line 58..61 + 77 (destroy_word_list):  additional argument to
      determine the last word_item of a list to be deleted, a NULL
      means all from start on.
    - line 67:  additional check to avoid link structures from getting
      deleted if they are still in use by other word_items.

February 7, 2003

  Baldrick's patches

  inet.c:
    - lines 56 - 59 reworked code to use ovl_getftab()
       ovl_init() left as some OVL's might need to malloc
       etc.

  ovl_sys.h:
    - lines 31-33 added long ftabtype and info to ovl_methods_t
      struct
    - line 55 modified OVL_DECL define to pass ftabtype

  paragraph.c:
    - lines 771-773 out commented as per mailing list

  modules\sample.c
    - line 38 added ftabtype to OVL_DECL

  modules\network.c
    - lines 42 and 44 added FTAB_NETWORK to OVL_DECL
    - reworked ovl_init() it's functionality is in ovl_getftab now


February 6, 2003

  Baldrick's patches

  ovl_sys.h:
    - modified OVL_REVISION
    - modified OVL_MAGIC to a numeric value

February 3, 2003

  AltF4's patches

  hwWind.c:
    - line 97 (new_hwWind) + 578 + 591 + 621 (wnd_hdlr):  additional
      argument for hwWind_setInfo().
    - line 170..178 (hwWind_setInfo):  additional argument statNinfo to
      control the buffer for the infobar text.
    - line 377 (hist_append):  history entry is take now from Stat[].

  hwWind.h:
    - line 21:  in struct hw_window, additional buffer for alternate
      infobar text.
    - line 33:  additional argument for hwWind_setInfo().

  Loader.c:
    - line 425 + 432 + 456 (loader_job):  update infobar after
      connecting finished.

  Mouse_R.c:
    - line 345 + 347 + 364 (check_mouse_position):  additional argument
      for hwWind_setInfo() to mark it a temporary text.

  Paragrph.c:
    - line 591 (content_destroy):  also free par->Line list.
    - line 762 (content_minimum):  delete unlinked word items.

  Table.c:
    - line 56 (delete_table):  also free the table struct itself.

January 30, 2003

  AltF4's patches

  render.c:
    - line 921 (render_A_tag):  added encoding for '&..;' entities
      inside of URLs.

January 29, 2003

  Baldrick's patches

  ovl_sys.c:
    - trimmed some junk off the header

  ovl_sys.h:
    - line 34: added new routine ovl_getftab()
    - lines 85-89 added ovl_getftab() define and info

  modules\sample.c
    - added ovl_getftab() routine

  modules\network.c
    - added ovl_getftab() routine

January 28, 2003

  AltF4's patches

  hw-types.h:
    - line 94:  added defines for the mostly used error codes.

  global.h:
    - line 9..11:  removed duplicate error defines.

  p_dir.c:
    - line 92 + 98 + 117 + 129 + 133 (parse_dir):  replaced error
      numbers by defined names.

  Loader.c:
    - line 671 + 678 (load_file):  replaced error numbers by defined
      names.

  Location.c:
    - line 277 (location_open):  added a cast to avoid a warning in
      Pure C.

  modules\example.src\sample.c:   line 98 + 101 (main):
  modules\network.src\network.c:  line 93 + 96 (main):
    - replaced error numbers by defined names.

  ovl_sys.c:
    - line 29:  removed error code define.
    - line 132 + 140 (load_ovl):  prepend modules directory name to the
      OVL name.
    - line 191:  replaced error number by defined name.
    - line 304 (load_sampleovl):  removed modules directory name.

  inet.c:
    - line 52 (ovl_load):  removed modules directory name.
    - line 128 + 136 (inet_host_addr):  replaced error numbers by
      defined names.

January 25, 2003

  AltF4's patches

  ovl_sys.h:
    - line 66:  new function and structure for module_info().

  ovl_sys.c:
    - line 43..46:  extended struct OVL_SLOT;  added function
      module_info() to return information about loaded OVLs.
    - line 64 (clear_slot):  free OVL name, decrement slot counter.
    - line 102 (load_ovl):  initial clear of the slot array.
    - line 168:  deleting of basepage must be done by Mfree().
    - line 170..178:  save OVL file name, increment slot counter.
    - line 205..229 (kill_ovl):  overworked to speedup clearing
      procedure, depending on num_slot.

  p_about.c:
    - line 19:  new function about_modules() to display information
      about loaded OVLs.
    - line 72 (about_cache):  corrected array pointer for free().
    - line 85 + 156 (about_highwire):  added info about number of
      loaded OVLs.
    - line 186 + 218 (parse_about):  added stuff for "about:modules".

January 22, 2003

  AltF4's patches

  ovl_sys.c:
    - line 48:  new function clear_slot().  fixed: the basepage and the
      environment must be freed by Mfree(), not by free()!
    - line 57 (sig_chld) + 200 (kill_ovl):  make use of clear_slot().
    - line 91 + 106 (load_ovl):  fixed search for OVL_MAGIC.
    - line 151..160 (load_ovl) + 178..188 + 190..196 + 208 (kill_ovl):
      make use of pointer instead of array index (faster method).

  inet.c:
    - line 16..25:  added functions and stuff for OVL usage.
    - line 100 (inet_host_addr) + 135 (inet_connect) + 159 (inet_send)
      + 218 (inet_recv) + 242 (inet_close) + 256 (inet_info):  added
      calls of OVL functions.

  Makefile, purewire.prj:
    - added compiler option -DUSE_INET.

  modules\network.src:
    - new files Makefile, purec.prj, network.c to create network OVLs.

January 21, 2003

  AltF4's patches

  inet.c:
    - line 16..25:  added functions and stuff for OVL usage.
    - line 100 (inet_host_addr) + 135 (inet_connect) + 159 (inet_send)
      + 218 (inet_recv) + 242 (inet_close) + 256 (inet_info):  added
      calls of OVL functions.

  ovl_sys.c:
    - line 48:  new function clear_slot().  fixed: the basepage and the
      environment ust be freed by Mfree(), not free()!
    - line 57 (sig_chld) + 200 (kill_ovl):  make use of clear_slot().
    - line 91 + 106 (load_ovl):  fixed search for OVL_MAGIC.
    - line 151..160 (load_ovl) + 178..188 + 190..196 + 208 (kill_ovl):
      make use of pointer instead of array index (faster method).

  Makefile, purewire.prj:
    - added compiler option -DUSE_INET.

  modules\network.src:
    - new files Makefile, purec.prj, network.c to create network OVLs.

January 21, 2003

  AltF4's patches

  defs.h:
    - line 6:  bumped to 0.1.2.

  HighWire.c:
    - line 21:  include ovl_sys.h.
    - line 229 (highwire_ex):  added kill_ovl().

  hw-types.h:
    - line 94:  added macros for cdecl prototypes.

  inet.c:
    - line 80 + 83 (inet_host_addr) + 110 + 113 (inet_connect)
      + 146 (inet_send) + 170 (inet_recv) + 230 (inet_close):  changed
      argument and return types in preparation for coming OVL support.

  inet.h:
    - line 7 + 9..12:

  ovl_sys.c:
    - line 30:  added struct array to hold data of loaded OVLs.
    - line 32:  signal handler to receive disappeared OVL processes.
    - line 39 (load_ovl):  overworked to handle more than one loaded
      OVL ata a time.
    - line 84:  new kill_ovl() to remove one particular or all OVLs.
    - line 89 (display_ovl_infos) + 105 + 115 (load_sampleovl):
      changed to avoid global variables.

  ovl_sys.h:
    - line 10:  removed cdecl macros.
    - line 28:  extended OVL_METH declaration.  also the filemagic is
      part of this struct now because it is dangerous not to do so (the
      compiler could re-arange these symbols in an OVL).
    - line 47:  added shorthand for OVL function tables.
    - line 48:  additional argument for load_ovl() is a function that
      will be called when an OVL disappeares.
    - line 49:  new function kill_ovl().

  modules\example.src\sample.prj, modules\example.src\Makefile:
    - corrected dependencies and defines.

  modules\example.src\sample.c:
    - line 18..32:  corrected includes.
    - line 42:  adapted OVL function table, removed unused globals.
    - line 98 (main):  overworked for different types of OVLs.

January 13, 2003   [V. 0.1.1 release]

  AltF4's patches

  Loader.c:
    - line 243..305 (chunked_job):  changed to avoid unexpected states
      of variables.

January 12, 2003

  AltF4's patches

  Loader.c:
    - line 243..305 (chunked_job):  changed to avoid unexpected states
      of variables.

January 12, 2003

  AltF4's patches

  inet.c:
    - line 190 + 214 (inet_recv):  changed break condition to avoid
      blocking if  no data available.
    - line 204:  changed if(), probably not necessary but more save.

  Makefile:
    - added file ovl_sys.c.

  purewire.prj, highwire.prj:
    - corrected dependencies for ovl_sys.c.

  ovl_sys.c:
    - line 10..13:  corrected includes.
    - line 33 (load_ovl):  added check for Pexec() failed.
    - line 45..47:  adapted Mshrink() call for Lattice and Gcc.
    - line 54:  corrected cast type.

  modules\example.src\sample.prj:
    - added dependencies for sample.c.

  modules\example.src\Makefile:
    - new file for Gcc.

  modules\example.src\ovl_sys.h:
    - made this a wrapper to load the header file from thwe main folder
      to avoid differnet declarations in both files.

  modules\example.src\sample.c:
    - line 10..14:  corrected includes.

January 10, 2003

  Baldricks patches

  Highwire.c:
    - line 174 added line to test OVL layer.  NOT PERMANENT
      DELETE before any release

  Inet.c:
    - 201 changed 0 to E_NODATA

  Verified that I had the correct Docs in archive and fixed lt
  error in dletter.htm

  AltF4's patches

  hwWind.c:
    - line 187 (set_size):  added a workaround for Geneva because this
      returns here wrongly a CURRXYWH of 0,0,0,0 when the window is
      already created but not opend.

  Table.c:
    - line 343..351 (table_cell):  simplyfied a bit the code for
      background colour setting.
    - line 439 + 441 (free_stack) + 479 + 485 + 707 (table_finish):
      changed parameter type to current, instead of parser.
    - line 448 (free_stack):  removed obsolete code because this sets a
      wrong background colour.

January 09, 2003

  Baldrick's patches

  ovl_sys.c: ovl_sys.h:
    - new routines for handling OVL files
      (probably buggy)

  purewire.prj
    - updated for ovl_sys.c and ovl_sys.h

  Modules folder added
  Modules\example folder added
  Sample OVL src code added in Modules\example
  sample.ovl added to modules folder

January 08, 2003

  AltF4's patches

  image.c:
    - line 136 + 155 + 175 (new_image) + 302 (image_calculate):  take
      care for images which are known to be non-transparent.
    - line 323 + 327 (image_job):  also compare background coulour of
      cached images.
    - line 930 (read_gif):  set background colour to -1 if transparency
      is not set.

  p_about.c:
    - line 34..36 (about_cache):  also display background colour of
      transparent gifs.

January 07, 2003

  AltF4's patches

  Containr.c:
    - line 604 + 649 (containr_Element):  corrected calculation of the
      frame border extents.

  defs.h:
    - line 417:  in struct word_line, new attribute Width to take care
      for obstackles (overlapping left/right aligned areas).

  hwWind.h:
    - line 42:  new global to store the current mouse shape and avoid
      useless changes.

  hwWind.c:
    - line 25 + 564 + 583 (wnd_hdlr):  update mouse shape variable.

  Mouse_R.c:
    - line 312 (check_mouse_position):  check for mouse pointer over
      some window widgets or the shadowed area.
    -line 379:  update mouse shape variable and avoid useless changes.

  Paragrph.c:
    - line 261 (paragraph_calc):  set line->Width to the right blocking
      size.
    - line 385:  paragraphs width must only set to the real width if it
      is a image paragraph.
    - line 426 + 451 (paragrph_word):  take care for overlapping
      obstacles.
     -line 949..992 (content_paragraph):  overworked to take care for
      overlapping (left/right aligned) paragraphs.

January 04, 2003

  AltF4's patches

  AEI.c:
    - line 625.. 638 (rpopup_open):  corrected coordinates to have the
      real extents (outlined, 3D) used.

  highwire.h, highwire.rsc, highwire.hrd, highwire.rsd, highwire.rso
    - updated due to changed popup.

  list.c:
    - line 17..27 (list_start):  corrected the indention value saved in
      list stack.
    - line 50..59 (list_finish):  added code to avoid epmty lists.
    - line 283..302 + 377..379 (list_marker):  code simplyfied.

  render.c:
    - line 143..186 (render_TITLE_tag):  reworked to avoid contiguous
      spaces.
    - line 1274..1329 (render_H_tag):  adapted to render_P_tag()
      because the code is _very_ similar.

  Widget.c:
    - line 30:  rewrote HW_form_do() to make it real crash proof on all
      setups and as well have fancy 3D-look.  the previous code is
      still in place because I'm not shure to have really all aspects
      implemented yet.

January 02, 2003

  AltF4's patches

  http.h:
    - line 13:  additional attribute for the number of remaining bytes
      in Tail.
    - line 17:  extended argument list.

  http.c:
    - line 228 + 286 (http_header):  additional argument to determine
      the size of a data block to read from remote.  this way a calling
      function can be shure that the returned number of bytes in Tail
      will fit into a buffer of that size.
    - line 223 + 334:  removed interpretation of chunk header data.
    - line 248 + 336:  set hdr.Tlen to the remaining number of bytes in
      hdr.Tail.

  Loader.h:
    - line 41..49:  reorganized current attributes and added new to
      meet the needs of the several modes of remote data access.

  Loader.c:
    - line 7..37:  reorganized includes and removed unused.
    - line 126:  new structure for storing data chunks.
    - line 161 (new_loader) + 197 (delete_loader):  initialize and
      release newly added resources.
    - line 208:  new function chunked_job().
    - line 209 (receive_job):  completey reworked.
    - line 304 (loader_job):  additional block_size argument for
      http_header() to make shure that the remaining bytes in hdr.Tail
      fits into the loader buffer.
    - line 322..342:  completely overworked to support more modes of
      chunked data.
    - line 508..556 (load_file):  completely overworked to avoid call
      of stat() because this don't allow access to long named files in
      Pure C, at least with my stone old (original) libraries.

December 23, 2002

  AltF4's patches

  defs.h:
    - line 5:  bumped version to 0.1.1.
    - line 11:  added #define to make alerts more handy.
    - line 430:  in struct word_item, added attribute wrap.
    - line 508:  in struct parse_sub, added attribute nowrap.

  Paragrph.c:
    - line 170 (paragrph_finish):  set wrap attribute if the last word
      item contains only a single space to allow later removing.
    - line 265 (paragraph_calc) + 648 (content_minimum):  uses wrap
      attribute instead of space_width for word wrapping.

  Redraws.c:
    - line 425 (draw_image):  avoid drawing of the place holder frame
      if the images has no more than one pixel width and/or height.

  render.c:
    - line 1223:  new functions render_WBR_tag() and render_NOBR_tag().

  Table.h:
    - line 38:  in struct s_table, new array pointer Percent.

  Table.c:
    - line 55 (delete_table):  free Percent array.
    - line 100 (table_start):  initialize Percent array to NULL.
    - line 315 (table_cell):  check for NOWRAP keyword.
    - line 493 (table_finish):  alloc and preset Percent array.
    - line 553 + 609:  set percentage values of table cells.
    - line 734 + 752 + 766 (table_calc):  calculate percentage values
      to pixel widths.

  token.h:
    - line 59 + 86:  new tags NOBR and WBR.
    - line 152:  new keyword NOWRAP, for <td> and <th>.

  W_Struct.c:
    - line 125 (new_word):  clear wrap attribute.
    - line 148 (word_store):  set wrap attribute depending on word
      starts with a space and current->nowrap not set.

December 20, 2002

  AltF4's patches

  Frame.c:
    - line 128..157 (frame_calculate):  overworked again because there
      was still a bug with scrolling="no".

  hwWind.c:
    - line 203 (hwWind_move):  clear fulled flag after window was moved.

December 19, 2002   [V. 0.1.0 release]

  AltF4's patches

  Frame.c:
    - line 129..163 (frame_calculate):  corrected handling of the
      scrolling attribute.

  AEI.c:
    - line 478 + 495 (menu_history):  added calls to menu_text().

December 18, 2002

  AltF4's patches

  defs.h:
    - line 20..22:  added #ifdef _HW_NO_GUI to have compiling more
      comfortable (but will need some more work later).

  global.h:
    - line 6:  removed #define GEM_MENU, set in defs.h.
    - line 77:  added declaration for HW_form_do.

  hwWind.c:
    - line 107 (new_hwWind) + 119 + 127 (delete_hwWind)
      + 302 (hwWind_raise) + 377 (hist_append) + 395 (hwWind_history)
      + 587 (wnd_hdlr):  added #ifdef GEM_MENU.

  AEI.c:
    - line 264 + 296 (menu_open) + 428 + 513 (menu_history) + 596
      + 653 (rpopup_open):  added #ifdef GEM_MENU.

  Makefile:
    - line 18:  removed -DGEM_MENU, set in defs.h.

  Mathias's patches (of December 15, 2002)

  defs.h:
    - line 11:  severall new defines to make the creation of other
      applications based on HW easier.

  config.c:
    - line 22 + 25 (read_config):  replaced "highwire.cfg" with
      _HIGHWIRE_CFG_.

  http.c:
    - line 268 + 272 (http_header):  _HIGHWIRE_FULLNAME_.

  Loader.c:
    - line 631 (init_paths):  replaced "highwire.cfg" with
      _HIGHWIRE_CFG_.

  hwWind.c:
    - line 39 + 90 (new_hwWind) + 156 + 167 (hwWind_setInfo) + 553 +564
      + 588 (wnd_hdlr):  added #if ... #endif [_HIGHWIRE_INFOLINE_].
    - line 583 (wnd_hdlr):  added #if ... #endif [_HIGHWIRE_ENCMENU_].

  keyinput.c:
    - line 70 (key_pressed):  #if/#endif [_HIGHWIRE_ENCMENU_].

  Mouse_R.c:
    - line 34 (button_clicked):  #if/#endif [_HIGHWIRE_ENCMENU_].
    - line 213:  added #if ... #endif [_HIGHWIRE_RPOP_].
    - line 331 + 338 + 350 (check_mouse_position):  added
      #if ... #endif [_HIGHWIRE_INFOLINE_].

  AEI.c:
    - line 198 + 236 (doGSCommand) + 253 (menu_about):  replaced
      "HighWire" with _HIGHWIRE_FULLNAME_.
    - line 530 + 539 (handle_menu) + 551 + 577 (update_menu):  put
      encoding-case's in #if...#endif.
    - line 593 + 650 (rpopup_open):  put rpop_open in #if...#endif.

  HighWire.c:
    - line 79 + 97 (main):  _ERROR_SPEEDO_/_ERROR_NOMEM_ instead of
      alert text.
    - line 129:  replaced highwire.rsc with _HIGHWIRE_RSC_.

December 17, 2002

  AltF4's patches

  Location.h:
    - line 38:  new function location_Host().

  Location.c:
    - line 237:  new function location_Host() to return the host name.

  Containr.h:
    - line 139 + 153:  extended argument list.
    - line 253:  changed return type.

  Containr.c:
    - line 39 + 41 + 329:  save frame title in a shared memory object.
    - line 332 + 343 + 376 + 411 (history_create):  additional argument
      to save the title of a frame.
    - line 462 + 468 (containr_process):  additional history argument
      to dedide what needs to be processed.
    - line 1099 + 1103 (containr_notify):  returns TRUE on success.

  Loader.h:
    - line 43:  in struct LOADER, new attribute notified to save the
      notification state of a loading process.

  Loader.c:
    - line 190 (delete_loader) + 281 (loader_job):  send notifications
      if necessary.
    - line 286 (loader_job):  for HTTP connections, send a notify about
      host connecting since this might need some time.
    - line 298 (loader_job) + 450 + 466 (new_loader_job):  set notified
      flag.

  parser.c:
    - line 64 (new_parser) + 81 (delete_parser):  set notified flag.
    - line 88 (delete_parser):  notification reoved, will be done by
      delete_loader().

  hwWind.c:
    - line 358..360 (hist_append):  extended arguments for
      history_create().
    - line 381 (hwWind_history): changed arguments for
      containr_process().

December 16, 2002

  AltF4's patches

  Containr.h:
    - line 133:  new attribute for struct s_history to determine the
      entry name length of a history item.

  Containr.c:
    - line 334 + 375..386 (history_create):  modified to mark entries
      of subframes.  this is detected by the container argument, if it
      has a parent it must be a subframe.

  render.c:
    - line 287 (render_FRAMESET_tag):  added a missing call to
      containr_notify() for empty frames.

  hwWind.c:
    - line 330 + 356 (hist_append) + 567 (wnd_hdlr):  modified handling
      of history creating to decide between main and subframes.

  AEI.c:
    - line 432..479 (menu_history:  overworked for subframe marking and
      menu box width change.

December 15, 2002

  AltF4's patches

  defs.h:
    - line 455:  in struct frame_item, new attribute MimeType.

  global.h:
    - line 68 + 93:  extended argument lists.

  W_Struct.c:
    - line 99 (new_word):  set word attributes fro current font_step
      and set the font.

  Frame.c:
    - line 18 + 27 (new_frame):  new argument mime type.
    - line 46:  set initial font size and step correctly.
    - line 55: for raw text reset the initial font.

  parser.c:
    - line 58 (new_parser):  additional mime type argument for
      new_frame().

  p_about.c:
    - line 182 (parse_about):  removed setting of initial font and
      font_step.

  render.c:
    - line 1177 + 1185 (render_IMG_tag):  changed creating of word_item
      to avoid lost following text.
    - line 1908 (parse_html) + 2091 (parse_plain):  removed setting of
      initial font and font_step.

  hwWind.c:   line 574 (wnd_hdlr):
  keyinput.c: line 71 (key_pressed):
  Mouse_R.c:  line 35 (button_clicked):
    - additional raw_text argument for update_menu().

  AEI.c
    - line 524 (update_menu):  additional raw_text argument to enable
      UTF16 menu entries.

  Form.c:
    - line 453 (input_handle):  corrected calculation of redraw area.

  Loader.c:
    - line 52 + 328 + 483:  removed useless encoding argument of
      load_file().
    - line 488 + 494 + 513 (load_file):  removed useless code.
    - line 563:  extended the malloc'ed memory to make it save for
      16bit encoding.
    - line 577:  removed build_fname().
    - line 607 (page_load):  simplified.

December 13, 2002

  AltF4's patches

  defs.h:
    - line 100..114:  fixed defines for Pure C.

  global.h:
    - line 76:  new function menu_history().

  Containr.h:
    - line 138:  additional argument for history_create().

  Containr.c:
    - line 11 + 18:  fixed defines for Pure C.
    - line 325..332 + 363 (history_create):  additional text argument
      to display in the menu.

  hwWind.c:
    - line 96 (new_hwWind) + 106 (delete_hwWind) + 239 + 242 + 257
      + 272 (hwWind_raise):  update history entries in menu.
    - line 305..331 (hist_append) + 342..349 (hwWind_history) + 489
      + 520 (wnd_hdlr):  modified to have the state of a history entry
      in load process stored properly.

  AEI.c:
    - line 422: new function menu_history() to handle history entries
      of the menu.
    - line 429 (handle_menu):  handle menu events of history entries.

  highwire.rsc, highwire.h, highwire.hrd, highwire.rsd, highwire.rso:
    - updated

December 12, 2002

  AltF4's patches

  hwWind.c:
    - line 103 (delete_hwWind):  added freeing of history entries.
    - line 514 (wnd_hdlr):  added a check to avoid accessing structure
      values through a NULL pointer.

December 10, 2002

  AltF4's patches

  p_about.c:
    - line 23 (about_cache):  overworked to have the cache objects
      listing row aligned.
    - line 186 (parse_about):  removed a left over  else if().

  defs.h
     - line 89:  forward declaration for HISTORY.

  image.c:  line 7:
  parser.c: line 12:
     - added defines to make forward declarations also working for
       Pure C.

  render.c:
    - line 274 (render_FRAMESET_tag):  removed useless if's to avoid
      setting again the already set default value.
    - line 1948 (parse_html):  removed handling of last_encoding.

  Loader.c:
    - line 476:  removed last_location, last_encoding, prev_location,
      prev_encoding, get_fpath(), none of them are used anymore.
    - line 517.. (load_file) +  799 (init_paths):  removed last.. and
      prev_.. variable handling.
    - line 683:  removed outcommented stuff.

  Containr.h
    - line 16 + 119:  new history stuff.

  Containr.c:
    - line 7.. + 259..:  new functions history_create(),
      history_destroy(), containr_process() for history management.

  hwWind.h:
    - line 10 + 17:  in struct hwWind, new attributes loading,
      HistUsed, HistMenu, History.
    - line 31:  new functions hwWind_history() and hwWind_undo().

  hwWind.c:
    - line 30..75 (new_hwWind):  updated initialization of hwWind.
    - line 288:  new functions hwWind_history() and hwWind_undo().
    - line 411 + 439 (wnd_hdlr):  added code for history update.

  AEI.c:
    - line 300 (menu_reload) +  501..533 (rpopup_open):  modified to
      make use of history;  removed prev_location/prev_encoding.

  keyinput.c:
    - line 63 + 133 (key_pressed):  modified to make use of history;
      removed prev_location/prev_encoding.

December 2, 2002

  AltF4's patches

  scanner.c
    - line 607..637 (scan_string_to_16bit):  modified to also remove
      trailing spaces, not only leadings.

  render.c
    - line 376 (render_META_tag):  additional code to remove invalid
      quotation of the link of a refresh argument.

  defs.h:
    - line 98:  more forward declarations, for INPUT and FORM.
    - line 390:  in struct word_item, input got a named pointer type
      (not void*), also reordered the other attributes a bit.
    - line 449:  in struct frame_item,  FormList got also a named
      pointer type now.

  token.h:
    - line 41 + 49:  added #undef's to avoid preprocessor missinterpre-
      titions of Pure C.
    - line 125:  new key DISABLED for <input> tags.

  parser.h:
    - line 10:  added defines to make forward declarations also working
      for Pure C.

  parser.c:
    - line 120 (get_value):  if a value isn't found the value buffer
      needs to be set to an empty string to avoid undefined states.

  Table.c:
    - line 11:  added defines to make forward declarations also working
      for Pure C.

  Form.h:
    - line 11..:  several new functions for producing input elements.

  Form.c:
    - line 7:  added defines to make forward declarations also working
      for Pure C.
    - line 24..45:  added new attributes to structs s_form and s_input,
      removed not longer used.
    - line 70.. (_alloc):  initialize newly added attributes, adapted
      to not link radio buttons into the elements chain but link them
      to a (pseudo) group element insted.
    - line 84..211:  new added functions form_radio(), form_check(),
      form_buttn(), form_text().
    - line 107..198 (new_input):  splitted off the code to several
      subfunctions, added setting for DISABLED key.
    - line 288 (input_draw):  new drawing for disabled elements.
    - line 308.. (input_handle):  overworked to not handle disabled
      elements, adapted to changed storing method of radio buttons.
    - line 346:  new function input_activate() to handle button events.

  p_about.c:
    - splitted off parse_about() code to two functions, one for the
      main contents and one for cache listing;  also integrated button
      elements for cache clear requests.

  Mouse_R.c:
    - line 179 (button_clicked):  added handling of forms buttons
      pressed.

November 24, 2002

  AltF4's patches

  Table.c:
    - line 95 (table_start):  initialize pointers table->Minimum/
      Maximum/ColWidth with NULL to avoid crashes on deleting empty
      tables (due to free'ing invalid memory).

November 20, 2002

  AltF4's patches

  defs.h:
    - line 461:  in struct parse_sub, new attribute prev_par.

  global.h:
    - line 93 + 149:  new functions frame_finish(), paragrph_finish().
    - line 148:  extended arfument list for add_paragrph().

  W_Struct.c:
    - line 34 (_alloc):  modified to avoid usage of a literal number.
    - line 38 (_alloc):  mark word as used if taken from a existing
      chunk, this was a serious bug befor and I'm really confused that
      this didn't already result in crashes in the previous version!
    - line 98 + 119 + 129 (new_word):  moved down setting of
      current->prev_wrd to have it correctly zeroed when necessary.

  Paragrph.c:
    - line 73 (new_paragraph):  preset prev_par.
    - line 93 + 121 (add_paragraph):  additionl argument vspace to set
      the space between the previous and the new paragraph.
    - line 95..113:  modified to avoid both empty word_items at the end
      of a paragraph and also empty paragraphs in general.
    - line 130:  new function paragrph_finish() to finalize the batch
      of paragraphs (of a content) and to filter out a possible empty
      paragraph at the end.

  list.c
    - line 24 (list_start) + 59 (list_finish):  removed setting of
      eop_space since this is now an argument for add_paragraph().
    - line 29 (list_start) + 284 + 292 (list_marker):  additional zero
      argument for add_paragraph() calls.
    - line 277 + 380 (list_marker):  modified to haver numbered lists
      looking a bit better.

  Table.h:
    - line 19..22:  new attribute SavedCurr replaces SavedStyles,
      SavedFntStp and Previous.

  Table.c:
    - line 64 (table_start) + 442 (free_stack):  additional zero
      argument for add_paragraph() calls.
    - line 73 + 76 (table_start) + 437 (free_stack):  new attribute
      SavedCurr replaces SavedStyles, SavedFntStp and Previous.
    - line 124 (table_row) + 242 (table_cell) + 436 (free_stack)
      + 462 (table_finish):  removed word_store(), will be handled by
      paragrph_finish().
    - line 165 (table_row):  stack->WorkCell mustn't be zeroed here, we
      need it for paragraph_finish().
    - line 248 (table_cell):  changed test of WorkCell to NumCells
      since the first ay always be non-zero.

  Frame.c:
    - line 80:  new function frame_finish() to finalize the content of
      a frame.

  parser.c:
    - line 75 (delete_parser):  content_minimum() replaced by
      frame_finish().

  p_about.c: line 198 (parse_about):
  p_dir.c:   line 293 (parse_dir):
    - word_store() removed, will be handled by paragrph_finish().

  render.c:
    - line 1141 + 1175 (render_IMG_tag) + 1276 (render_H_tag) +1312
      + 1316 (render_HR_tag) + 1428 (render_CENTER_tag)
      + 1752 (render_DT_tag) + 1768 (render_DD_tag)
      + 2036 (parse_html) + 2231 (render_hrule) + 2234 (render_hrule):
      additional zero argument for add_paragraph() calls.
    - line 1239 (render_H_tag) + 1380 + 1400 (render_P_tag) + 1455
      + 1478 (render_BLOCKQUOTE_tag) + 1507 + 1522 (render_DIV_tag)
      + 1538 (render_PRE_tag) + 1565 (render_PLAINTEXT_tag) + 1585
      + 1591 (render_LISTING_tag) + 2294 (render_text):  removed
      setting of eop_space since this is now an argument for
      add_paragraph().
    - line 2066 (parse_html) + 2180 (parse_text) + 2219 (parse_image):
      word_store() removed, will be handled by paragrph_finish().
    - line 2100 + 2145..2151 (parse_plain):  removed local variable
      previous, use current->prev_par instead.

November 15, 2002

  AltF4's patches

  p_dir.c:
    - line 127 (parse_dir):  added a wrapper for bindings that don't
      have Dxreaddir().

  defs.h:
    - line 477:  in struct list_stack_item, changed type of attribute
      Spacer.

  Paragrph.c:
    - line 96 (add_paragraph):  if the actual paragraph covers a <li>
      inherite the hanging to the new paragraph's left indent.

  render.c:
    - line 1365 + 1378 + 1392 + 1400 + 1405 + 1410 (render_P_tag):
      replaced access to par->Current by local current variable.
    - line 1376:  corrected check for paragraph adding.
    - line 1701 (render_LI_tag):  oved all stuff for creating of the
      bullet/number ite over to list_marker().
    - line 1780 (render_DT_tag) + 1797 (render_DD_tag):  corrected
      calculation of paragraph indent.

  list.c:
    - line 20..35 (list_start):  overworked to have the bullet/number
      of a <li> not in a own paragraph but as the first word item of a
      left hanging paragraph.
    - line 78:  new function short2roman().
    - line 137..410 (list_marker):  calculation of roman numerals moved
      to short2roman().
    - line 423:  added code for creating the bullet/number word_item.

November 13, 2002

  Baldrick's hacks ;)

  p_dir.c
    - line 121-145 put #ifndef PUREC around DXreaddir() code
      that I don't have PureC support for atm.  It does't work
      but it at least links :/

  AltF4's patches

  defs.h:
    - line 92 + 448 + 481:  struct clickable_area reoved, isn't used
      anymore.
    - line 404:  new attribute Hanging in struct PARAGRPH.
    - line 449: in struct frame_item, attributes current_list and
      TableStack removed, are hold now by parser->current.

  Frame.c:
    - line 40 (new_frame):  removed settings of first_clickable_area,
      current_list, TableStack attributes.
    - line 94 + 121 + 143 + 151 (frame_calculate):  removed obsoleted
      clickable_are handling.

  global.h:
    - line 122: new functions list_start() and list_finish().
    - line 128: removed remove_stack_item() and new_stack_list_item(),
      this is handled now by list_start() and list_finish().
    - line 133: removed obsoleted functions new_clickable_area() and
      destroy_clickable_area_structure().
    - line 154:  changed declaration of content_calc().

  list.c:
    - new functions list_start() and list_finished().
    - functions long2decimal(), long2alpha(), list_marker() overtaken
      from render.c.

  Makefile, purewire.prj, highwire.prj:
    - updated due to new list.c file.

  O_Struct.c:
    - line 8:  removed obsoleted functions new_clickable_area() and
      destroy_clickable_area_structure().
    - line 99:  removed remove_stack_item() and new_stack_list_item(),
      this is integrated now in list_start() and list_finish().

  Paragrph.c:
    - line 58 (new_paragraph) + 101 (add_paragraph):  preset attribute
      Hanging.
    - line 127 + 154 + 237 + 250 (paragraph_calc) + 741 + 799
      + 805 (content_calc):  removed obsoleted clickable_are argument
      and calculations.
    - line 135 + 185 + 229 +316 (paragraph_calc):  implemented code for
      left/right hanging paragraphs, will be usefull for lists.

  render.c:
    - line 88 (get_align) + 2351 (render_TABLE_tag)
      + 2365 (render_TR_tag) + 2379 (render_TD_tag)
      + 2394 (render_TH_tag) + 2626 (parse_html):  adapted to
      parser->Current.tbl_stack.
    - line 1236 (render_H_tag) + 1376 (render_P_tag)
      + 1815..2154 (list_marker) + 2176..2244 (render_LI_tag) + 2309
      + 2312 (render_DT_tag) + 2327 + 2330 (render_DD_tag):  adapted to
      parser->Current.lst_stack.
    - line 1610 (render_OL_tag) + 1675 (render_UL_tag)
      + 1742 (render_MENU_tag) + 2262 (render_DL_tag):  functions
      unified and adapted for use of list_start()/list_finished().
    - line 1787..2168:  functions long2decimal(), long2alpha() and
      list_marker() moved to new file list.c.

  Table.c:
    - line 63 + 73 + 79 + (table_start)  + 432..442 (free_stack):
      replaced parser->Current access by local current variable.
    - line 76 + 82 + 90 (table_start) + 116 (table_row)
      + 232 (table_cell) + 433 + 443 (free_stack) + 453 (table_finish):
      adapted to parser->Current.tbl_stack.
    - line 670 + 816 (table_calc):  removed obsoleted clickable_are
      argument.

  Table.h:
    - line 72:  changed declaration of table_calc().

November 12, 2002

  AltF4's patches

  Containr.c:
    - line 49 (delete_containr) + 228 (containr_clear):  notify pending
      jobs if a container becomes deleted.

  fontbase.c:
    - line 176 (font_byType):  no setting of space_width, will be done
      in word_store().

  global.h:
    - line 114:  additional argument for parse_html(),parse_plain(),
      parse_image(),parse_about(),parse_dir().

  image.c:
    - line 184 (new_image) + 282 (image_calculate) + 307
      + 319 (image_job):  additional (unused) argument for image_job().

  Loader.c:
    - line 64 + 67 (parser_job) + 197 + 203 (receive_job): + 258
      + 261 (loader_job):  additional argument to notify if the target
      container of the job becomes invalidated.
    - line 72 + 77 + 80 + 83 + 105 + 110:  additional (here not used)
      arguents for parse_*() function calls.
    - line 250 (receive_job) + 298 + 316 (loader_job) + 386 + 390 + 422
      + 431 + 439 + 443 + 447 (new_loader_job):  use target container
      as the hash argument for scheduling jobs.

  p_about.c:
    - line 23 + 32 (parse_about):

  p_dir.c:
    - line 46 + 84 (parse_dir):

  Paragrph.c:
    - line 595 (content_minimum):  check space_width instead of the
      first string element (faster method).

  Redraws.c:
    - line 500 (draw_paragraph):  take the string start according to
  	  the value of space_width.
    - line 586:  removed check for leading space character.

  render.c:
    - line 2459 + 2473 (parse_html) + 2646 + 2660 (parse_plain)
     + 2753 + 2757 (parse_image):  additional argument to notify if
     the target container of the parser job becomes invalidated.

  schedule.c:
    - line 19 + 42 + 47 (sched_insert):  new attribute hash to mark
      jobs belonging to a common object (usually a container).
    - line 82:  new function sched_clear() to notify a group of jobs
      about invalidation.

  schedule.h:
    - line 42 + 48:  changed declarations of sched_insert() and
      sched_remove().
    - line 54:  new function sched_clear().

  W_Struct.c:
    - line 106 + 117 + 128 (new_word):  initial word->space_width is 0.
    - line 144..149 (word_store):  only set word->space_width if the
      string really starts with a space.

November 11, 2002

  AltF4's patches

  AEI.c:
    - line 366:  the 'about:' button of the info box opens a new window
      now.

  defs.h:
    - line 378: in struct word_item, new attribute _priv used for
      memory management.

  fontbase.h, fontbase.c:
    - line 208:  font_step2size() renamed and moved over from render.c.

  Form.c:
    - line 120 + 128 + 136 + 146 + 161 (new_input):  additional
      argument parser for get_value*() calls.

  global.h:
    - line 115:  parse_text() renamed to parse_plain(), this is a bit
      more logical because it follows the MIME naming scheme.
    - line 118:  functions render_hrule(),render_text(), render_link()
      made global accessible.

  highwire.rsc:
    - small glitch in menu fixed.

  Loader.c:
    - line 110 (parser_job):  parse_text() renamed to parse_plain().
    - line 151 (new_loader):  removed handling of PROT_MAILTO, will be
      done by new_loader_job() now, also avoid file extension check for
      directories.
    - line 385 (new_loader_job):  re-arranged the order of if()s to
      make the code more logical, handling of PROT_MAILTO simplified.

  Makefile, purewire.prj, highwire.prj:
    - updated due to new files.

  p_dir.c, p_about.c:
    - new own files for parse_dir() and parse_about().
    - parse_dir():  improved code to have the listing sorted by name/
      size/date.
    - parse_about():  if a 'about:cache' list has no clearable objects
      the '[clear]' link will be disabled now.

  parser.c:
    - line 27:  the KEY=VALUE pairs of a tag parsing are stored inside
      the struct PARSER now instead of a static array.
    - line 79:  new function find_key().
    - line 96 (get_value) + 123 (get_value_str) + 146 (get_value_char)
      + 170 (get_value_unum) + 198 (get_value_size)
      + 231 (get_value_color):  overworked to make use of the PARSER
      argument and find_key().

  parser.h:
    - line 26..65:  parse_tag() and all get_value*() functions get a
      struct PARSER as the first argument now.

  render.c:
    - line 42 (step2size):  renamed to font_step2size() and moved over
      to fontbase.c.
    - line 73 (step_push) + 80 (step_pop) + 618 (render_BASEFONT_tag)
      + 2243 (render_LI_tag):  renamed call to font_step2size().
    - replaced all get_value*(KEY_..) by get_value*(parser, KEY_..)
      (66 times).
    - line 385 (render_META_tag):  implementation of meta refresh tag.
    - line 422 (render_STYLE_tag) + 530 (render_SCRIPT_tag)
      + 2523 (parse_html):  additional argument parser for parse_tag().
    - line 592 + 629 (render_BASEFONT_tag):  new variable current.
    - line 2482 + 2530:  removed force_cset, already (and better)
      handled by render_META_tag().
    - line 2665 (parse_text):  renamed to parse_plain().
    - line 2791 (r_ruler) + 2813 (r_text) + 2889 +2893 (r_link):
      renamed to render_hrule(),render_text(), render_link().
    - line 2902 (parse_about) + 3079 (parse_dir):  moved to own files.

  Table.c:
    - line 84..106 (table_start) + 176..188 (table_row)
      + 310..347 (table_cell):  additional argument parser for
      get_value*() calls.

  W_Struct.c:
    - line 17:  new static function _alloc() to allocate a chunk of 32
      word items at one go to reduce the number of malloc/free() calls.
      only for gcc this reduces render time a bit (best case down to
      80%) but for all compilers it reduces destroying time of frame
      structures considerably.

November 8, 2002

  AltF4's patches

  defs.h:
    - line 98:  forward declaration of struct PARSER.
    - line 429:  in struct frame_item, new attribute ForceEnc to avoid
      encoding change by render functions.
    - line 450:  struct TEXTBUFF isn't any longer part of a FRAME but
      is hold now in the struct PARSER.

  Form.c:
    - line 101 (new_input):  'frame' and 'current' are taken from
      struct PARSER now.

  Form.h:
    - line 7:  changed argument list for new_input().

  Frame.c
    - line 18 + 55 (new_frame):  additional argument 'current'.
    - line 24:  set attribute ForceEnc.
    - line 45:  removed zeroing of 'current', already done in calling
      new_parser().

  global.h:
    - line 91 + 157:  extended argument list for new_frame() and
      new_image().
    - line 113..:  changed argument list for all parse_..() functions.

  image.c:
    - line 97 + 100 (new_image):  variable 'current' comes from
      argument list now.

  Loader.c:
    - line 65 + 110 (parser_job):  removed setup of frame and container
      which is done now by new_parser().
    - line 72.. 107 (parser_job) + 404 + 420 + 460 (new_loader_job):
      all parse..() functions take struct PARSER now instead of FRAME.

  parser.c
    - line 17..:  new functions new_parser() and delete_parser().

  parser.h:
    - line 10:  new struct s_parser to store several things which were
      held formerly by struct frame_item and inside the parse_..()
      functions, new functions new_parser() and delete_parser().

  render.c
    - general text replacements (in this order!) due to changed
      argument lists:
        - 'p_frame' ==> 'frame' (69 times),
        - 'render_*_tag (FRAME frame' ==> 'render_*_tag (PARSER parser'
          (49 times),
        - 'frame->current' ==> 'parser->Current' (79 times),
        - 'frame->Container' ==> 'parser->Target' (5 times),
        - get_align(frame) ==> get_align (parser)   (4 times),
        - 'frame' ==> 'parser->Frame' (in lines 142,166,370,392,446,626,
          737,974,1379,1476,2344,2358,2372,2387,2413),
        - inserted   FRAME frame = parser->Frame;  (in lines 107,240,
          466,908,1117,1237,1425,1611,1675,1741,1816,2173,2257,2300,
          2317,2455,2655,2762,2903,3105),
        - 'frame' ==> 'parser' (in lines 558,1811,2232,2343,2345,2359,
          2373,2388,2436,2630).
    - line 1170 (render_IMG_tag) + 2775 (parse_image):  adapted to
      changed new_image() argument list.
    - line 2452 (parse_html) + 2652 (parse_text) + 2761 (parse_image)
      + 2902 (parse_about) + 3104 (parse_dir):  parse_..() functions
      taking only one single PARSER argument now, void* since being
      scheduled job functions.
    - line 2455 (parse_html) + 2655 (parse_text):  variable 'symbol'
      taken now from parser argument.
    - line 2456 + 2461 + 2547 + 2560 + 2575 + 2616 (parse_html)
      + 2657 + 2681 + 2718 + 2728 (parse_text):  'watermark's are taken
      from PARSER now.
    - line 2458[-] +2476[-] + 2577 (parse_html) + 2660[-] + 2669[-]
      + 2682 + 2702 + 2740 (parse_text) + 2764[-] (parse_image)
      + 2905[-] + 2916[-] (parse_about) + 3107[-]
      + 3137[-] (parse_dir):  active_word_buffer isn't needed anymore,
      this is held in struct PARSER now ('[-]' means deleted lines).
    - line 2488 + 2513 (parse_html):  all render_*_tag() functions take
      a struct PARSER arguent now instead of FRAME.
    - line 2631 + 2637 (parse_html) + 2746 + 2751 (parse_text)
      + 2777 (parse_image) + 3069 (parse_about) + 3263 (parse_dir):
      content_minimum() replaced by delete_parser().
    - line 3085 (parse_dir):  more defines of DTA attributes for
      Lattice C.

  Table.c:
    - line 59 + 112 + 228 + 238 + 428 + 448 + 459 + 466 + 472 + 661:
      changed argument list for all table functions.
    - line 62 + 71..77 (table_start) + 122 (table_row) + 240 + 297
      + 301 + 333 + 335..339 (table_cell) + 433..441 (free_stack):
      replaced 'frame->current' by 'parser->Current'.
    - line 61 (table_start) + 114 (table_row) + 230 (table_cell)
      + 429 (free_stack) + 450 (table_finish):  'frame' is taken from
      struct PARSER now.

  Table.h:
    - line 67..:  changed argument list for all table_..() functions.

November 6, 2002

  AltF4's patches

  Loader.c:
    - line 81 (parser_job) + 166 (new_loader) + 281 (new_loader) + 403
      + 407 + 420 (new_loader_job):  replaced protocol numbers by type
      enums.
    - line 188 (new_loader):  reoved useless check for directory.
    - line 418 + 455 (new_loader_job):  changed handling of 'mailto:'
      requests.

  Location.c:
    - line 58 (_alloc) + 85 + 140..161 + 173 + 185.. (new_location):
      replaced protocol numbers by type enums.
    - line 491 (dir_entry):  corrected search loop.
    - line 508:  replaced stat() by Fattrib(), should work better on
      8.3 file systems.

  Location.h:
    - line 6 + 9:  new enum for protocol types.

November 5, 2002

  AltF4's patches

  AEI.c:
    - line 307 (menu_reload):  fixed reloding of pages to not always
      replace the '_top' frame  (bug #0082).

  global.h:
    - line 115: new functions parse_about() and parse_dir().

  highwire.rsc:
    - fixed some oddities, nothing real important.

  Loader.c:
    - line 80 (parser_job):  checks for parse_about() and parse_dir().
    - line 394 (new_loader_job):  removed the monster string generator
      for 'about:' requests, will be done now by parse_about().
    - line 492:  new check for 'mailto:' requests.
    - line 528:  new check for directory listing.

  Location.c:
    - line 45 + 336 (dir_entry) + 101 + 174 + 179 (new_location):
      additional argument to avoid check for directory on remote.
    - line 346 (dir_entry):  improved determination of the file name
      end of a URL.
    - line 343 + 401 + 408 + 469:  additional check to find out if a
      (local) URL without a trailing '/' or '\' is also a directory.

  Mouse_R.c:
    - line 212 (button_clicked):  check for window found instead of for
      container element to top a window  (bug #0081).
    - line 328 + 357 (check_mouse_position):  modified to have also an
      image link shown in the window's info bar  (bug #0015).

  render.c:
    - line 2776..:  new helper funtions r_ruler(), r_text(), r_link()
      to create simple elementes for frame contents, new parse_about()
      to create a 'about:' and new parse_dir() to create a directory
      listing page.

November 1, 2002

  AltF4's patches

  AEI.c:
    - line 301 (menu_reload) + 318 (menu_info) + 497 (rpopup_open):
      adapted usage of active keyboard frame to new functions.
    - line 345 (menu_info):  added new encoding types to info box.
    - line 367:  changed call of containr_Base(), NULL pointers aren't
      allowed anymore.

  Containr.c:
    - line 18 + 29 (new_containr) + 284 (containr_byName)
      + 334 (containr_byCoord) + 749 (containr_redraw):  removed the
      static __base variable.  this was a pretty good source for bad
      crashes because it relyed on global accessible data what can't
      be cone anymore.
    - line 266:  removed containr_Base(), this is a simple macro now.
    - line 331 (containr_byCoord) + 395 (containr_Element):  modified
      to not accept NULL arguments anymore.
    - line 911 (containr_scroll):  moved the vs_clip_off() out of the
      else branch to fix funny redraw bugs while scrolling if more than
      one window is open.

  Containr.h:
    - line 121 + 125:  declarations of containr_Frame() and
      containr_Base() changed.
    - some comments corrected.

  defs.h:
    - line 4:  updated to version 0.1.0.
    - line 93 + 425 + 463:  forward declaration of typedef FRAME.
    - line 285:  struct s_image contains now a pointer to it's frame,
      not the container.

  en_bics.h:
    - line 25 + 43 + 65:  defines for END_.._to_BICS corrected.

  en_uni.h:
    - line 9:  new table for Windows-1252.
    - line 21 + 38:  defines for END_.._to_Unicode corrected.
    - line 40:  new table for Atari System Font.

  encoding.c:
    - line 92:  new encoder functions windows1252.., iso8859_2_..,
      iso8859_15_.., utf8_.., utf16_.., atari_..to_utf16()
      (Rainer Oct. 9, 2002).
    - line 160 (unicode_to_bics):  number replaced by defined symbol.
    - line 473 (encoder_word):  new encoder functions for unicode
      mapping inserted.
    - line 498 (unicode_to_wchar):  target unicode mapping added.

  fontbase.c:
    - line 35 (font_base):  mapping mode for unicode added.
    - line 129 (font_byType) + 188 (font_switch):  replaced the NVDI-3
      vst_charmap() by NVDI-4 vst_map_mode() to because the first can't
      switch to unicode mapping.

  global.h:
    - line 114:  new function parse_image().
    - line 154:  new_image() now gets its frame, not the container.

  hwWind.c:
    - line 185.. (hwWind_full):  fixed redraw bug on fulled windows
      (bugtracker #0079).
    - line 262 (hwWind_scroll):  temporary debug output, probably not
      necessary anymore.
    - line 396 (wnd_hdlr):  invalidate the Active pointer of a window
      if the corresponding container got cleared.
    - 429 + 431:  updated handling of active frame.
    - line 458:  new hwWind_setActive() and hwWind_ActiveFrame().

  hwWind.h:
    - line 15 + 39:  new hwWind_setActive() and hwWind_ActiveFrame() to
      make the handling of active keyboard frames more robust.

  image.c:
    - line 97.. (new_image):  now gets its frame, not the container.
      also removed all stuff for creating a single-image-page, this
      will be done now by parse_image().
    - line 331 + 347 + 389 + 419 (image_job):  changed detemining of
      the target container by using the iage's frame now.

  keyinput.c:
    - line 65.. (key_pressed):  adapted usage of active keyboard frame
      to new functions.

  Loader.c:
    - line 75 (parser_job) + 526 (new_loader_job):  changed for calling
      of parse_image().

  Mouse_R.c:
    - line 28 + 31 + 34 (button_clicked):  adapted handling of active
      frame to new functions.

  render.c:
    - line 1166 (render_IMG_tag):  adapted call of new_image().
    - line 1323 (render_HR_tag):  removed useless height calculation.
    - line 2668 (parse_text):  corrected encoding for encoder_word().
    - line 2749:  new function parse_image() to create a page for
      loading obe single image.


Changes of October 29, 2002 (V. 0.09 release) and before are in the
File "hist-009.txt".

